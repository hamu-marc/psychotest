(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["app~d0ae3f07"],{

/***/ 0:
/*!*****************************************************************************************************************************!*\
  !*** multi aurelia-webpack-plugin/runtime/empty-entry aurelia-webpack-plugin/runtime/pal-loader-entry aurelia-bootstrapper ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! aurelia-webpack-plugin/runtime/empty-entry */"GAND");
__webpack_require__(/*! aurelia-webpack-plugin/runtime/pal-loader-entry */"GmYv");
module.exports = __webpack_require__(/*! aurelia-bootstrapper */"b9nV");


/***/ }),

/***/ "3QiX":
/*!***************************************!*\
  !*** ./src/components/interpreter.js ***!
  \***************************************/
/*! exports provided: Interpreter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interpreter\", function() { return Interpreter; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"EVdn\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _stimulusinterpreter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stimulusinterpreter */ \"YqAC\");\n/* harmony import */ var _responseinterpreter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./responseinterpreter */ \"YWhn\");\n/* harmony import */ var _ranking2dinterpreter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ranking2dinterpreter */ \"ROQc\");\n/* harmony import */ var _preprocesor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./preprocesor */ \"MmLu\");\n/* harmony import */ var _dsl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dsl */ \"UbAQ\");\n\n\n\n\n\n //shuffle randomly the array\n\nArray.prototype.shuffle = function () {\n  var i = this.length;\n  var j;\n  var temp;\n  if (i == 0) return this;\n\n  while (--i) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = this[i];\n    this[i] = this[j];\n    this[j] = temp;\n  }\n\n  return this;\n}; //make prototype function startsWith - if it does not exist\n\n\nif (typeof String.prototype.startsWith !== 'function') {\n  String.prototype.startsWith = function (str) {\n    return this.slice(0, str.length) == str;\n  };\n}\n\nString.prototype.endsWith = function (suffix) {\n  return this.indexOf(suffix, this.length - suffix.length) !== -1;\n};\n\nString.prototype.extract = function (subs) {\n  return this.substring(this.indexOf(subs) + subs.length);\n};\n\nString.prototype.contains = function (str) {\n  return this.indexOf(str) !== -1;\n};\n\nvar Interpreter = /*#__PURE__*/function () {\n  function Interpreter(controller) {\n    this.isZvuk = void 0;\n    this.controller = controller; //is used to notify first or last page of test and to control test page flow\n\n    this.currentCursor = 0;\n    this.currentPage = 0;\n    this.maxPages = 0;\n    this.questionPage = 0;\n    this.sliderValues = [];\n    this.testName = '';\n    this.currentTest = '';\n    this.sloupce = false;\n    this.sliderId = 0;\n    this.previoustoken = ''; //holds previous token - for distinguishing states during interpretation\n\n    this.previousrow = ''; //holds previous row\n\n    this.tstate = {}; //holds structure of state variables\n    //keep the last question and values for answer\n\n    this.allowprev = true;\n    this.educational = false;\n    this.highlighted = false;\n    this.eduid = 0;\n    this.eduresults = {}; //new Responses();\n\n    this.resumeid = 0; //id of paused test; for future update\n\n    this.hodnoty = [];\n    this.hodnotySetted = true; //    this.columnnumber = 0;\n\n    this.lastformid = '';\n    this.lastformidescaped = '';\n    this.pausedtestid = 0;\n    this.parovaotazka = false;\n    this.result = new _responseinterpreter__WEBPACK_IMPORTED_MODULE_2__[\"Responseinterpreter\"](this);\n    window.ri = this.result;\n    this.stimul = new _stimulusinterpreter__WEBPACK_IMPORTED_MODULE_1__[\"Stimulusinterpreter\"](this);\n    this.ranking2d = new _ranking2dinterpreter__WEBPACK_IMPORTED_MODULE_3__[\"Ranking2dinterpreter\"](this);\n  }\n\n  Interpreter.extract = function extract(s, subs) {\n    return s.substring(s.indexOf(subs) + subs.length);\n  };\n\n  Interpreter.endsWith = function endsWith(s, suffix) {\n    return s.indexOf(suffix, s.length - suffix.length) !== -1;\n  };\n\n  var _proto = Interpreter.prototype;\n\n  _proto.translateObrazovka = function translateObrazovka(row) {\n    this.result.resetLast();\n    this.sloupce = false;\n    var translatedRow = \"<span class='lefthead'>\" + this.currentPage + '. ' + Interpreter.extract(row, 'screen') + \" </span><span class='righthead'>\" + this.testName + \"</span><p style='clear:both;margin:20px;'></p>\\n\";\n    this.previoustoken = 'screen';\n    return translatedRow;\n  };\n\n  _proto.translateText = function translateText(row) {\n    var output = '';\n    if (this.sloupce) output += \"<tr><td colspan='2'>\";\n    output += '<p>' + Interpreter.extract(row, 'text') + '</p>';\n    if (this.sloupce) output += '</td></tr>';\n    return output;\n  } //used multipletimes\n  ;\n\n  _proto.generateHtmlOtazkaRow = function generateHtmlOtazkaRow(suffix) {\n    this.lastformid = 'q' + this.currentPage + '.' + this.questionPage;\n    this.lastformidescaped = 'q' + this.currentPage + '\\\\\\\\.' + this.questionPage;\n    var mysuffix = '';\n    if (suffix) mysuffix = suffix;\n    return \"<form id='\" + this.lastformid + \"' name='q\" + this.currentPage + '.' + this.questionPage + \"'><fieldset><legend>\" + this.result.lastotazka + mysuffix + ' </legend>';\n  };\n\n  _proto.generateEditHeaderRow = function generateEditHeaderRow() {\n    this.lastformid = 'q' + this.currentPage + '.' + this.questionPage;\n    this.lastformidescaped = 'q' + this.currentPage + '\\\\\\\\.' + this.questionPage;\n    return \"<form id='\" + this.lastformid + \"' name='q\" + this.currentPage + '.' + this.questionPage + \"'><fieldset><legend>\" + this.result.lastotazka + '</legend>';\n  };\n\n  _proto.translateTaskForStimuli = function translateTaskForStimuli(row) {\n    this.parovaotazka = false;\n    this.result.lastotazka = Interpreter.extract(row, 'taskforstimuli '); //adds to the #1 to the question\n\n    this.hodnotySetted = false;\n    this.questionPage++; //var mytable = \"\";\n    //mytable += this.generateHtmlOtazkaRow();\n    //if (this.sloupce) { //make row of table\n    //        var mytable =  + mytable;//  + \"</td>\"; //\n    //}\n\n    return \"<tr><td class='task'>\" + this.generateHtmlOtazkaRow(' #1');\n  }\n  /*\n   *\ttranslates \"task ...\" to the HTML form\n   */\n  ;\n\n  _proto.translateOtazka = function translateOtazka(row) {\n    this.parovaotazka = false;\n    this.result.lastotazka = Interpreter.extract(row, 'task ');\n    this.hodnotySetted = false;\n    this.questionPage++;\n    return this.generateHtmlOtazkaRow();\n  } //mytableend = \"</td>\";\n  //if (columnnumber == 1) mytableend += \"</tr>\";\n  //TODO finish otazka and parovaotazka in table with 2 columns\n\n  /*\n   *\ttranslates \"parovaotazka ... \" to the HTML form with 2 sounds each in 1 column and each row has the same question\n   */\n  ;\n\n  _proto.translateParovaOtazka = function translateParovaOtazka(row) {\n    //lastotazka = row.substring(\"otazka\".length);\n    //hodnotySetted = false;\n    this.parovaotazka = true;\n    this.questionPage++;\n    this.result.lastotazka = Interpreter.extract(row, 'task ');\n    this.lastformid = 'q' + this.currentPage + '.' + this.questionPage;\n    this.lastformidescaped = 'q' + this.currentPage + '\\\\\\\\.' + this.questionPage;\n    return \"<tr><td colspan='2'><form id='\" + this.lastformid + \"'><fieldset><legend>\" + this.result.lastotazka + '</legend>';\n  }\n  /*\n   *\ttranslates \"hondoty ...\" to the opened HTML form, interprets as allowed values to be chosen by user\n   */\n\n  /*function translateHodnoty(rowsplitted) {\n   return translateHodnoty(rowsplitted, true,false);\n   }\n   */\n  ;\n\n  _proto.hashCode = function hashCode(s) {\n    return s.split('').reduce(function (a, b) {\n      a = (a << 5) - a + b.charCodeAt(0);\n      return a & a;\n    }, 0);\n  };\n\n  _proto.generateHtmlRow = function generateHtmlRow(rowsplitted, radiobuttons, taskindex) {\n    var translatedRow = '';\n\n    for (var j = 1; j < rowsplitted.length; j++) {\n      var mybr = '<br />';\n      var myvalue = rowsplitted[j];\n      var myid = this.hashCode(this.lastformid + 'v' + myvalue);\n      if (this.parovaotazka || this.valuesonrow) mybr = '&nbsp; &nbsp;'; //don't make new line in parova otazka or when values on row\n\n      if (radiobuttons) {\n        translatedRow += \"<input id='\" + myid + \"'type='radio' name='otazka' value='\" + myvalue + \"' onclick='ri.setAnswer(\" + this.currentPage + ',' + this.questionPage + \",this)'/><label for='\" + myid + \"' class='answer'><span><span></span></span>\" + myvalue + '</label>' + mybr;\n      } else {\n        translatedRow += \"<input id='\" + myid + \"' type='checkbox' name='otazka' value='\" + myvalue + \"' onclick='setCheckAnswer(\" + this.currentPage + ',' + this.questionPage + \",this)'/><label for='\" + myid + \"'span class='answer'><span></span>\" + myvalue + '</label>' + mybr;\n      }\n\n      this.result.setDefaultAnswer(this.currentPage, this.questionPage, taskindex);\n    }\n\n    return translatedRow;\n  };\n\n  _proto.translateHodnoty = function translateHodnoty(rowsplitted) {\n    var radiobuttons = !_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isCheckboxvalues(rowsplitted[0]);\n    this.valuesonrow = _dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isCheckboxvaluesOnRow(rowsplitted[0]) || _dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isValuesOnRow(rowsplitted[0]);\n    var translatedRow = '';\n    var taskindex = '';\n    if (this.sloupce && !this.parovaotazka) taskindex = ' #1';\n    translatedRow += this.generateHtmlRow(rowsplitted, radiobuttons, taskindex);\n    translatedRow += '</fieldset></form>\\n';\n\n    if (this.sloupce) //coppies the same task and values to the second collumn of the pairs\n      {\n        if (this.parovaotazka) {\n          translatedRow += '</td></tr>';\n        } else {\n          //close the column, duplicate question to second column and close the row\n          this.questionPage++;\n          taskindex = ' #2';\n          translatedRow += \"</fieldset></form></td><td class='task'>\" + this.generateHtmlOtazkaRow(taskindex); //fix bug#249 added closing form tag\n\n          translatedRow += this.generateHtmlRow(rowsplitted, radiobuttons, taskindex);\n          translatedRow += '</fieldset></form></td></tr>';\n        }\n      } //will remember the values of last question - it is not needed to repeat them\n\n\n    this.hodnoty[this.result.lastotazka] = rowsplitted;\n    this.hodnotySetted = true;\n    return translatedRow;\n  };\n\n  _proto.splitValues = function splitValues(row) {\n    var re1 = /[ ;,]+/; // fix feature bug #240, coma ',' is used to separate interval numbers\n\n    if (!row.contains('\"')) return row.split(re1);\n    var rowsplitted = [];\n    var quote = false;\n    var currentitem = '';\n\n    for (var i = 0; i < row.length; i++) {\n      if (!quote) //normal split\n        {\n          if (/[\\\"]/.test(row[i])) quote = true;else if (/[, ;]/.test(row[i])) {\n            if (currentitem.length > 0) rowsplitted.push(currentitem);\n            currentitem = '';\n          } else {\n            currentitem += row[i];\n          }\n        } else {\n        //quotes add everything between quotes\n        if (/[\\\"]/.test(row[i])) {\n          rowsplitted.push(currentitem);\n          currentitem = '';\n          quote = false;\n        } else {\n          currentitem += row[i];\n        }\n      }\n    }\n\n    if (currentitem.length > 0) rowsplitted.push(currentitem);\n    return rowsplitted;\n  };\n\n  _proto.translateScale = function translateScale(previousrow, rowsplitted) {\n    if (this.sloupce && !this.parovaotazka) {\n      //makes two coppies of the task for each stimulus in pair\n      var translated = '\\n' + this.translateSkalovaci() + this.translateSkalovaciHodnoty(rowsplitted, ' #1');\n      this.questionPage++;\n      translated += '</fieldset></form></td><td>' + this.generateHtmlOtazkaRow(' #2') + this.translateSkalovaci() + this.translateSkalovaciHodnoty(rowsplitted, ' #2') + '</fieldset></form></tr></td>\\n';\n      return translated;\n    }\n\n    return this.translateSkalovaci(previousrow) + this.translateSkalovaciHodnoty(rowsplitted);\n  };\n\n  _proto.translateVAScale = function translateVAScale(previousrow, rowsplitted) {\n    if (this.sloupce && !this.parovaotazka) {\n      //makes two coppies of the task for each stimulus in pair\n      var translated = '\\n' + this.translateSkalovaci() + this.translateSkalovaciVAHodnoty(rowsplitted, ' #1');\n      this.questionPage++;\n      translated += '</fieldset></form></td><td>' + this.generateHtmlOtazkaRow(' #2') + this.translateSkalovaci() + this.translateSkalovaciVAHodnoty(rowsplitted, ' #2') + '</fieldset></form></tr></td>\\n';\n      return translated;\n    }\n\n    return this.translateSkalovaci(previousrow) + this.translateSkalovaciVAHodnoty(rowsplitted);\n  }\n  /*  translateSkalovaciHodnoty(rowsplitted) {\n    return this.translateSkalovaciHodnoty(rowsplitted,\"\");\n  };\n  */\n  ;\n\n  _proto.translateSkalovaciHodnoty = function translateSkalovaciHodnoty(rowsplitted, taskindex) {\n    if (taskindex === void 0) {\n      taskindex = '';\n    }\n\n    //moved to translateSkalovaci questionPage++; //increase index of answer\n    this.result.setDefaultAnswer(this.currentPage, this.questionPage, taskindex); //fix bug # 198\n    //var rowsplitted = splitValues(row);\n\n    var translatedRow = '';\n    this.sliderValues[this.sliderId] = rowsplitted.slice(1);\n    translatedRow += '<script>Interpreter.makeSlider(0, 0,' + (this.sliderValues[this.sliderId].length - 1) + ', 1, ' + this.sliderId + ',' + this.questionPage + ');</script>'; //    if (this.sloupce)\n    //        if (this.parovaotazka) {\n    //            translatedRow += \"</td></tr>\";\n\n    /*        } else {\n                this.questionPage++;\n                this.sliderId++;\n                this.sliderValues[this.sliderId] = rowsplitted.slice(1);\n                this.result.setDefaultAnswer(this.currentPage, this.questionPage); //fix bug # 198\n                translatedRow += \"<script>makeSlider(0, 0,\" + (this.sliderValues[this.sliderId].length-1) + \", 1, \" + this.sliderId + \",\" + this.questionPage + \");</script>\";\n            }*/\n    //} else {\n    //    this.questionPage++;\n    //    this.sliderId++;\n    //    this.result.setDefaultAnswer(this.currentPage, this.questionPage); //fix bug # 198\n    //    //var rowsplitted = splitValues(row);\n    //    //translatedRow = \"\";\n    //    this.sliderValues[this.sliderId] = rowsplitted.slice(1);\n    //    translatedRow += \"<td><tr><script>makeSlider(0, 0,\" + (this.sliderValues[this.sliderId].length-1) + \", 1, \" + this.sliderId + \",\" + this.questionPage + \");</script>\";\n    //}\n\n    return translatedRow;\n  }\n  /* translateSkalovaciVAHodnoty(rowsplitted) {\n    return this.translateSkalovaciVAHodnoty(rowsplitted,\"\");\n  };\n   */\n  ;\n\n  _proto.translateSkalovaciVAHodnoty = function translateSkalovaciVAHodnoty(rowsplitted, taskindex) {\n    if (taskindex === void 0) {\n      taskindex = '';\n    }\n\n    //moved to translateSkalovaci questionPage++; //increase index of answer\n    this.result.setDefaultAnswer(this.currentPage, this.questionPage, taskindex); //fix bug #198\n\n    var translatedRow = '';\n    var mySliderValues = []; //console.log(\"translateSkalocavi rowsplitted:\");\n    //console.log(rowsplitted)\n\n    /*for (var i = 3; i < rowsplitted.length;i=i+2 ) {\n     mySliderValues[parseInt(rowsplitted[i])]= rowsplitted[i+1];\n     }\n     sliderValues[sliderId] = mySliderValues;\n     */\n\n    if (rowsplitted[2].indexOf('(') > 0) {\n      //fix bug #269 scale 0 100(0.5) will be translated as 0 100 with step 0.5\n      var maxstep = rowsplitted[2].split(/[\\(\\)]/); //console.log(\"maxstep\");\n      //console.log(maxstep)\n\n      for (var i = 3; i < rowsplitted.length; i = i + 2) {\n        //mySliderValues[Math.floor(parseInt(rowsplitted[i])/maxstep[1] - rowsplitted[1])] = rowsplitted[i + 1];//fix bug #269 add correct indices to ticks -100 100(0.5) will make -200 200\n        mySliderValues[parseFloat(rowsplitted[i])] = rowsplitted[i + 1]; //fix bug #269 new version of labeled, changed to parsefloat\n        //mySliderValues[rowsplitted[i]] = rowsplitted[i + 1]; //fix bug #minus float values not determined??\n      }\n\n      this.sliderValues[this.sliderId] = mySliderValues;\n      translatedRow += '<script>Interpreter.makeVASlider(' + this.sliderId + ',' + rowsplitted[1] + ',' + maxstep[0] + ', ' + this.questionPage + ',' + maxstep[1] + ');</script>';\n    } else {\n      for (i = 3; i < rowsplitted.length; i = i + 2) {\n        mySliderValues[parseInt(rowsplitted[i])] = rowsplitted[i + 1];\n      }\n\n      this.sliderValues[this.sliderId] = mySliderValues;\n      translatedRow += '<script>Interpreter.makeVASlider(' + this.sliderId + ',' + rowsplitted[1] + ',' + rowsplitted[2] + ', ' + this.questionPage + ');</script>';\n    } //console.log(\"va hodnoty js:\" + translatedRow);\n\n\n    return translatedRow;\n  };\n\n  _proto.translateSkalovaci = function translateSkalovaci(row) {\n    var translatedRow = ''; //\"<br />\";\n\n    this.sliderId++;\n    if (row) this.result.lastotazka = Interpreter.extract(row, 'task '); //fix bug #198\n    //move to task questionPage++; //moved from skalovaci??hodnoty\n    //fix #212    translatedRow += \"<p id='q\" + currentPage + \".\" + questionPage + \"' class='label'><input class='sliderlabel' readonly='true' type='text' id='slider\" + sliderId + \"Value'></p>\";\n\n    translatedRow += \"<p class='label'><input class='sliderlabel' readonly='true' type='text' id='slider\" + this.sliderId + \"Value'></p>\";\n    translatedRow += \"<div id='slider\" + this.sliderId + \"'></div>\"; //translatedRow += \"<br /><br />\";\n    //console.log(\"translateSkalovaci \" + sliderId);\n    //move it to skalovacihodnoty\n\n    return translatedRow;\n  };\n\n  _proto.translatePopis = function translatePopis(row) {\n    var taskindex = '';\n    if (this.sloupce && !this.parovaotazka) taskindex = ' #1';\n    if (Interpreter.endsWith(row, '?')) this.result.setDefaultOptionalAnswer(this.currentPage, this.questionPage, taskindex);else this.result.setDefaultAnswer(this.currentPage, this.questionPage, taskindex);\n    var translatedrow = \"<textarea rows='1' onkeyup='window.ri.setAnswer(\" + this.currentPage + ',' + this.questionPage + \",this)'></textarea>\";\n\n    if (this.sloupce) {\n      if (this.parovaotazka) {\n        translatedrow += '</fieldset></form></td></tr>';\n      } else {\n        this.questionPage++;\n        taskindex = ' #2';\n        translatedrow += '</fieldset></form></td><td>' + this.generateHtmlOtazkaRow(taskindex); //fix bug#249 added closing form tag\n\n        if (Interpreter.endsWith(row, '?')) this.result.setDefaultOptionalAnswer(this.currentPage, this.questionPage, ' #2');else this.result.setDefaultAnswer(this.currentPage, this.questionPage, taskindex);\n        translatedrow += \"<textarea rows='1' onkeyup='window.ri.setAnswer(\" + this.currentPage + ',' + this.questionPage + \",this)'></textarea>\";\n      }\n    }\n\n    return translatedrow;\n  } //if the question is not closed put values from previously defined question with values\n  ;\n\n  _proto.closeOtazka = function closeOtazka() {\n    if (!this.hodnotySetted) {\n      //console.log(\"closeOtazka() last values not set\");\n      //console.log(hodnoty);\n      //console.log(lastotazka);\\\n      this.hodnotySetted = true;\n\n      if (this.hodnoty[this.result.lastotazka]) {\n        //console.log(\"setting from last values\");\n        return this.translateHodnoty(this.hodnoty[this.result.lastotazka]);\n      }\n\n      return '</fieldset></form>\\n';\n    }\n\n    return '';\n  }\n  /*\n   *\t\"sloupce\" command initiate the HTML output to be generate into the HTML table with 2 collumns\n   */\n  ;\n\n  _proto.translateSloupce = function translateSloupce() {\n    if (!this.sloupce) {\n      this.sloupce = true; //return \"<table><thead><tr><th class='tablefirst'/><th class='tablesecond'/></thead><tbody><tr>\";\n\n      return '<table><tr>';\n    }\n\n    return '';\n  };\n\n  _proto.closeSloupce = function closeSloupce() {\n    if (this.sloupce) {\n      this.sloupce = false;\n      return '</tr></tbody></table>';\n    }\n\n    return '';\n  } //select generates select menu\n  ;\n\n  _proto.translateSelect = function translateSelect(rowsplitted) {\n    //fix bug ... indicate that the element was answered by changing the background\n    var row = \"<select onclick='this.style.background=\\\"lightblue\\\"; window.ri.setAnswer(\" + this.currentPage + ',' + this.questionPage + \",this);' onchange='window.ri.setAnswer(\" + this.currentPage + ',' + this.questionPage + \",this);'>\";\n\n    for (var i = 1; i < rowsplitted.length; i++) {\n      row += \"<option value='\" + rowsplitted[i] + \"'>\" + rowsplitted[i] + '</option>';\n    }\n\n    row += '</select>';\n    this.result.setDefaultAnswer(this.currentPage, this.questionPage); //fix bug # 198\n\n    return row;\n  };\n\n  _proto.translateStyle = function translateStyle(previoustoken, row) {\n    var firsttoken = row.trim().split(' ', 2)[0]; //gets #style or #stylebutton or #styleform\n\n    var styledefinition = Interpreter.extract(row, firsttoken); //extract the previously obtained token\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isObrazovka(previoustoken)) //style of body e.g.:max-width:40em\n      {\n        return \"\\n<script>document.body.style='\" + styledefinition + \"'</script>\\n\";\n      }\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isZvuk(previoustoken)) //style of all stimulus attribute e.g.: width:10%;\n      {\n        return \"\\n<script>$('.stimulus').attr('style','\" + styledefinition + \"');</script>\\n\";\n      }\n\n    if (previoustoken === 'button') {\n      return \"\\n<script>$('.sound-button').attr('style','\" + styledefinition + \"');</script>\\n\";\n    }\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isOtazka(previoustoken)) {\n      return \"\\n<script>$('.task').attr('style','\" + styledefinition + \"');</script>\\n\";\n    }\n\n    if (previoustoken === 'form') {\n      return '\\n<script>' + //\"console.log('\" +lastformidescaped+\"');\"+ //logs\n      \"$('#\" + this.lastformidescaped + \"').attr('style','\" + styledefinition + \"');\" + //sets style for the form element with last formid\n      \"$('#\" + this.lastformidescaped + \" ~ form').attr('style','\" + styledefinition + \"');\" + //and sets style for all other sibling forms\n      '</script>\\n';\n    } //fix #212, 248\n    //return \"\\n<script>$('.task').children('form').attr('style','\" + styledefinition + \"');</script>\\n\";\n\n\n    return '';\n  };\n\n  _proto.translateType = function translateType(row) {\n    //translates type - educational mode, previous button allowed/notallowed etc.\n    if (row.contains('nopreviousbutton')) this.allowprev = false;\n    if (row.contains('yespreviousbutton')) this.allowprev = true;\n    if (row.contains('educational')) this.educational = true;\n\n    if (this.educational) {\n      this.eduid = row.match(/educational\\(([\\d]+)\\)/)[1];\n      if (this.eduid !== '') this.getEduResults();\n    } //indexOf(\"educational\")+1\n\n  };\n\n  _proto.getEduResults = function getEduResults() {\n    $.getJSON(PsychoResultIdUrl + this.eduid, null, function (data) {\n      //console.log(\"retrieved educational raw results\");\n      //console.log(data);\n      this.eduresults = {};\n      data[0].resultItems.forEach(function (item) {\n        //console.log(\"parsing item:\");\n        //console.log(item);\n        var itemobj = RepairJSONResultItem(item);\n        if (!this.eduresults[itemobj.case]) this.eduresults[itemobj.case] = {};\n        if (!this.eduresults[itemobj.case].answer) this.eduresults[itemobj.case].answer = [];\n        this.eduresults[itemobj.case].answer[itemobj.question.trim()] = itemobj.answer;\n        if (!this.eduresults[itemobj.case].note) this.eduresults[itemobj.case].note = [];\n        if (!itemobj.note) this.eduresults[itemobj.case].note[itemobj.question.trim()] = itemobj.date; //TODO new collumn for note, current workaround, note into date collumn\n        else this.eduresults[itemobj.case].note[itemobj.question.trim()] = itemobj.note;\n      }); //console.log(\"retrieved educational results\");\n      //console.log(eduresults);\n    });\n  } //translate one row\n  ;\n\n  _proto.translateTestItems = function translateTestItems(row) {\n    var translatedRow = '';\n    row = row.trim(); //console.log('test item:');\n    //console.log(row);\n\n    /*var re1 = /[ ;,]+/; // fix feature bug #240, coma ',' is used to separate interval numbers\n     var rowsplitted = row.split(re1);*/\n\n    var rowsplitted = this.splitValues(row); //fix bug, comas and spaces in quotes\n\n    if (rowsplitted.length === 0) return translatedRow;\n    if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isZvuk(rowsplitted[0])) translatedRow += this.stimul.translateZvuk(rowsplitted, this.tstate.poradivnticinahodne, this.result, this.sloupce);else if (!_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].startsWithComment(rowsplitted[0])) translatedRow += this.stimul.translateNonZvuk(row); //do separation between stimuli and other elements\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isZvuk(rowsplitted[0])) {}\n    /* already done in previous call, no action*/\n    //else if (Dsl.isVideo(rowsplitted[0])) translatedRow += this.stimuli.translateVideo(rowsplitted); //deprecated\n    else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isText(rowsplitted[0])) translatedRow += this.translateText(row);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isSloupce(rowsplitted[0])) translatedRow += this.translateSloupce();\n      /*else if (Dsl.isParovaOtazka(rowsplitted[0])) { //priority over Dsl.isOtazka\n          translatedRow += this.closeOtazka();\n          translatedRow += this.translateParovaOtazka(row);\n      } //else if (Dsl.isSkalovaci(rowsplitted[0])) translatedRow += translateSkalovaci(row); //priority over Dsl.isOtazka\n      */\n      else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isTaskForStimuli(rowsplitted[0])) {\n          translatedRow += this.closeOtazka();\n          if (this.sloupce) translatedRow += this.translateTaskForStimuli(row);else Console.log(\"Warning: unexpected token 'taskforstimuli' not in pair \");\n        } else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isOtazka(rowsplitted[0])) {\n          translatedRow += this.closeOtazka();\n          if (this.sloupce) translatedRow += this.translateParovaOtazka(row);else translatedRow += this.translateOtazka(row);\n        } else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isPanel(rowsplitted[0])) {\n          translatedRow += this.closeOtazka();\n        } else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isHodnoty(rowsplitted[0]) || _dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isCheckboxvalues(rowsplitted[0])) translatedRow += this.translateHodnoty(rowsplitted); //will match also valuesonrow and checkboxvaluesonrow\n        // move decDsl.ision on type of hodnoty on function translateValues else if (Dsl.isHodnoty(rowsplitted[0])) translatedRow += translateHodnoty(rowsplitted,true);\n        //else if (Dsl.isCheckboxvalues(rowsplitted[0])) translatedRow += translateHodnoty(rowsplitted, false);\n        else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isSkalovaciHodnoty(rowsplitted[0])) translatedRow += this.translateScale(this.previousrow, rowsplitted);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isSkala(rowsplitted[0])) translatedRow += this.translateVAScale(this.previousrow, rowsplitted);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isPopis(rowsplitted[0])) translatedRow += this.translatePopis(row);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isSerad2d(rowsplitted[0])) translatedRow += this.ranking2d.translateSerad2d(row.slice('ranking2d'.length), this.stimul.audioid, this.currentPage, this.questionPage++);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isSelect(rowsplitted[0])) translatedRow += this.translateSelect(rowsplitted);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isStyleButton(rowsplitted[0])) translatedRow += this.translateStyle('button', row);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isStyleForm(rowsplitted[0])) translatedRow += this.translateStyle('form', row);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isStyle(rowsplitted[0])) translatedRow += this.translateStyle(this.previoustoken, row);else if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isType(rowsplitted[0])) this.translateType(row);\n\n    this.previoustoken = rowsplitted[0];\n    if (!_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].startsWithComment(rowsplitted[0])) this.previousrow = row;\n    return translatedRow;\n  };\n\n  _proto.footerPageNumber = function footerPageNumber() {\n    return \"<p align='center' class='footer'>Obrazovka \" + this.currentPage + ' z celkem ' + this.maxPages + '.</p>';\n  } //shuffle randomly the array\n  ;\n\n  _proto.shuffle = function shuffle() {\n    var i = this.length;\n    var j;\n    var temp;\n    if (i == 0) return this;\n\n    while (--i) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = this[i];\n      this[i] = this[j];\n      this[j] = temp;\n    }\n\n    return this;\n  }\n  /*\n   *\tthis script will preprocess the test - make combination of screens etc. before it is interpretted\n   * e.g. \"parovytest\", there are made pairs from the sounds within this test and generated screens,\n   *      for 2 sound there is 1 pair, for 3 sounds there are 3 pair combination [1,2][1,3][2,3], ...\n   */\n  //    this.prep = new Preprocesor(this); //backward reference\n  ;\n\n  //reset all values\n  _proto.initTest = function initTest(currentRawTest) {\n    /*this.tstate.poradivnticinahodne = false;\n    this.tstate.poradizvukunahodne = false;\n    this.tstate.poradicasenahodne = false;*/\n    this.educational = false;\n    this.highlighted = false;\n    this.prep = new _preprocesor__WEBPACK_IMPORTED_MODULE_4__[\"Preprocesor\"](this);\n    this.currentTest = this.prep.preprocessTest(currentRawTest); //preprocess from currentRawTest to currentTest\n\n    this.tstate = this.prep.tstate; //console.log(currentTest);\n\n    this.maxPages = this.currentTest.match(/\\n[\\s]*screen/ig).length;\n    this.testName = Interpreter.extract(this.currentTest.match(/test .*/i).toString(), 'test ');\n    this.currentCursor = 0;\n    this.currentPage = 0;\n    this.resumeid = 0;\n    this.result.answers = []; //reset answers TODO check\n\n    this.sliderValues = []; //reset slider values\n  };\n\n  _proto.resumeTest = function resumeTest(currentRawTest, page, answers, resumeid) {\n    this.educational = false; //TODO persist\n\n    this.highlighted = false; //TODO persist\n\n    this.sliderValues = []; //TODO persist?\n\n    this.resumeid = resumeid;\n    this.prep = new _preprocesor__WEBPACK_IMPORTED_MODULE_4__[\"Preprocesor\"](this);\n    this.currentTest = currentRawTest; //a;ready preprocessed\n\n    this.tstate = this.prep.tstate; //console.log(currentTest);\n\n    this.maxPages = this.currentTest.match(/\\n[\\s]*screen/ig).length;\n    this.testName = Interpreter.extract(this.currentTest.match(/test .*/i).toString(), 'test ');\n    this.currentCursor = 0;\n    this.currentPage = 0; //    this.currentPage = page; //persistent\n\n    if (page > 0) {\n      page--;\n\n      while (this.currentPage < page) {\n        this.nextpage();\n      }\n    } else {\n      console.log('weird paused at page 0; or 1;');\n    }\n\n    this.result.answers = answers; //reset answers\n  };\n\n  _proto.findPreviousObrazovka = function findPreviousObrazovka(testDSL) {\n    var splitted = testDSL.split('\\n');\n    this.currentCursor--;\n    this.currentPage -= 2;\n\n    while (this.currentCursor > 0 && !splitted[this.currentCursor].startsWith('screen')) {\n      this.currentCursor--;\n    }\n\n    if (this.currentCursor > 0) this.currentCursor--; //step over the curent item\n\n    while (this.currentCursor > 0 && !splitted[this.currentCursor].startsWith('screen')) {\n      this.currentCursor--;\n    }\n  }\n  /*nextpage(){\n    return \"<p>some demo test</p>\";\n  }*/\n  ;\n\n  Interpreter.makeSlider = function makeSlider(sliderVal, sliderMin, sliderMax, sliderStep, sliderId, myQuestionPage) {\n    //console.log(\"slider\");\n    this.result.setDefaultAnswer(\n    /*parser*/\n    this.currentPage, myQuestionPage);\n    var myslider = $('#slider' + sliderId);\n    myslider.labeledslider({\n      value: sliderVal,\n      min: sliderMin,\n      max: sliderMax,\n      step: sliderStep,\n      slide: function slide(event, ui) {\n        $('#slider' + sliderId + 'Value').val(\n        /*parser*/\n        this.sliderValues[sliderId][ui.value]); //ui.handle.style.backgroundColor = \"lightblue\";//css(\"background-color\",\"lightblue\"); jquery ui\n\n        this.style.background = 'lightblue';\n        window.ri.setAnswer(\n        /*parser*/\n        this.currentPage, myQuestionPage,\n        /*parser*/\n        this.sliderValues[sliderId][ui.value]);\n      },\n      start: function start(event, ui) {\n        $('#slider' + sliderId + 'Value').val(\n        /*parser*/\n        this.sliderValues[\n        /*parser*/\n        this.sliderId][ui.value]); //ui.handle.style.backgroundColor = \"lightblue\";\n\n        this.style.background = 'lightblue';\n        window.ri.setAnswer(\n        /*parser*/\n        this.currentPage, myQuestionPage,\n        /*parser*/\n        this.sliderValues[\n        /*parser*/\n        this.sliderId][ui.value]);\n      },\n      tickLabels:\n      /*parser*/\n      this.sliderValues[sliderId]\n    });\n    var width = myslider.width() / (\n    /*parser*/\n    this.sliderValues[\n    /*parser*/\n    this.sliderId].length - 1);\n  };\n\n  Interpreter.makeVASlider = function makeVASlider(sliderId, sliderMin, sliderMax, myQuestionPage, sliderStep) {\n    if (sliderStep === void 0) {\n      sliderStep = 1;\n    }\n\n    //console.log(\"VAslider\");\n    this.result.setDefaultAnswer(\n    /*parser*/\n    this.currentPage, myQuestionPage);\n    var sliderKeysstr = Object.keys(\n    /*parser*/\n    this.sliderValues[sliderId]);\n    var sliderKeys = sliderKeysstr.map(Number); //fix bug #269 new version of labeledslider requires numbers\n\n    $('#slider' + sliderId).labeledslider({\n      value: sliderMin,\n      min: sliderMin,\n      max: sliderMax,\n      step: sliderStep,\n      slide: function slide(event, ui) {\n        $('#slider' + sliderId + 'Value').val(ui.value);\n        this.style.background = 'lightblue';\n        window.ri.setAnswer(\n        /*parser*/\n        this.currentPage, myQuestionPage, ui.value);\n      },\n      start: function start(event, ui) {\n        $('#slider' + sliderId + 'Value').val(ui.value);\n        this.style.background = 'lightblue'; //$(\"#slider\" + sliderId).css(\"background\",\"lightblue\");\n\n        window.ri.setAnswer(\n        /*parser*/\n        this.currentPage, myQuestionPage, ui.value);\n      },\n      //tickInterval:sliderStep,\n      tickArray: sliderKeys,\n      tickLabels:\n      /*parser*/\n      this.sliderValues[sliderId]\n    });\n  };\n\n  _proto.starttest = function starttest() {\n    $('#tab2help').hide(); //.fadeOut(500); TODO html specific\n\n    var currentRawTest = this.selectedTestDefinition;\n    if (typeof this.editor !== 'undefined') currentRawTest = this.editor.getValue(); //    parser = new Interpreter();\n\n    this.initTest(currentRawTest);\n    this.hideNonAnswered();\n    this.controller.preview.innerHTML = this.nextpage(); ///*parser*/this.currentTest);\n    //console.log(this.controller.preview.innerHTML);\n\n    this.evaluateScripts();\n  };\n\n  _proto.resumetest = function resumetest() {\n    $('#tab2help').hide(); //.fadeOut(500); TODO html specific\n    //var currentRawTest = selectedTestDefinition;\n    //if (typeof editor !== \"undefined\") currentRawTest = editor.getValue();\n    //parser = new Interpreter();\n\n    this.resumeTest(this.selectedTestDefinition, this.selectedTestScreennumber, this.selectedTestAnswers, this.selectedTestId);\n    this.hideNonAnswered();\n    this.controller.preview.innerHTML = this.nextpage(); ///*parser*/this.currentTest);\n    //console.log(this.controller.preview.innerHTML);\n\n    this.evaluateScripts();\n  };\n\n  _proto.nextpage = function nextpage() {\n    var testDSL = this.currentTest;\n    this.currentPage++;\n    this.questionPage = 0;\n    this.stimul.audioid = 0; //reset audioid\n\n    console.log('next page', this.currentPage);\n\n    if (this.currentPage >= this.maxPages) {\n      if (this.currentPage === 1) this.controller.lastNoPrevPage();else this.controller.lastPage();\n    } else if (this.currentPage === 1) this.controller.firstPage();else this.controller.middlePage();\n\n    var translatedheader = '';\n    var splitted = testDSL.split('\\n'); //go from cursor to the first \"screen\" which will be start of interpretation\n\n    while (\n    /*parser*/\n    this.currentCursor < splitted.length && !_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isObrazovka(splitted[\n    /*parser*/\n    this.currentCursor])) {\n      /*parser*/\n      this.currentCursor++;\n    }\n\n    this.nt = []; //translate obrazovka row\n\n    if (\n    /*parser*/\n    this.currentCursor < splitted.length) {\n      translatedheader +=\n      /*parser*/\n      this.translateObrazovka(splitted[\n      /*parser*/\n      this.currentCursor]);\n      this.nt.push(this.newTrans(splitted[this.currentCursor]));\n      /*parser*/\n\n      this.currentCursor++;\n    } //interpret everything until next 'obrazovka or end'\n\n\n    while (\n    /*parser*/\n    this.currentCursor < splitted.length && !_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isObrazovka(splitted[\n    /*parser*/\n    this.currentCursor])) {\n      translatedheader +=\n      /*parser*/\n      this.translateTestItems(splitted[\n      /*parser*/\n      this.currentCursor]);\n      this.nt.push(this.newTrans(splitted[this.currentCursor]));\n      /*parser*/\n\n      this.currentCursor++;\n    } //console.log(\"translated 0:\" + translatedheader);\n\n\n    translatedheader +=\n    /*parser*/\n    this.closeOtazka(); //close open questions without values\n\n    translatedheader +=\n    /*parser*/\n    this.closeSloupce();\n    translatedheader +=\n    /*parser*/\n    this.stimul.closeQuestionDiv();\n    translatedheader +=\n    /*parser*/\n    this.footerPageNumber();\n    console.log('translated header:', translatedheader);\n    return translatedheader;\n  };\n\n  _proto.traversetest = function traversetest(definition, callback, errorcallback) {\n    /*parser*/\n    this.initTest(definition);\n\n    while (\n    /*parser*/\n    this.currentPage <\n    /*parser*/\n    this.maxPages) {\n      this.nextpage();\n    } //evaluateScripts(); //there are no scripts, only innerhtml\n\n\n    this.postAnswers(callback, errorcallback);\n  } //TODO check if needed - remove\n  ;\n\n  _proto.cleartest = function cleartest() {\n    this.controller.preview.innerHTML = ''; //this.showButtonsStart();\n\n    this.controller.startPage();\n  } //TODO check if needed - remove\n  ;\n\n  _proto.previoustestitem = function previoustestitem() {\n    /*parser*/\n    this.findPreviousObrazovka(\n    /*parser*/\n    this.currentTest);\n    this.controller.preview.innerHTML = this.nextpage();\n    this.evaluateScripts();\n  } //TODO violation of separation, mixed parser-interpreter and content\n  ;\n\n  _proto.checkAnswersInScreen = function checkAnswersInScreen() {\n    var foundNA = false;\n    var item;\n\n    if (\n    /*parser*/\n    this.result.answers[\n    /*parser*/\n    this.currentPage - 1]) {\n      for (var i = 0; i <\n      /*parser*/\n      this.result.answers[\n      /*parser*/\n      this.currentPage - 1].length; i++) {\n        if (\n        /*parser*/\n        this.result.answers[\n        /*parser*/\n        this.currentPage - 1][i] &&\n        /*parser*/\n        this.result.answers[\n        /*parser*/\n        this.currentPage - 1][i].answer) {\n          if (\n          /*parser*/\n          this.result.answers[\n          /*parser*/\n          this.currentPage - 1][i].answer === 'N/A') {\n            //highlight - /*parser*/this.result\n            item = document.getElementById('q' +\n            /*parser*/\n            this.currentPage + '.' + (i + 1)).getElementsByTagName('fieldset'); //document.getElementById('q' + /*parser*/this.currentPage + '.' + (i + 1));\n\n            if (!item.length) item = document.getElementById('q' +\n            /*parser*/\n            this.currentPage + '\\\\.' + (i + 1)); //if (item.length)\n\n            item[0].style.backgroundColor = '#ffdddd';\n            foundNA = true;\n          } else {\n            console.log('checkAnswersinscreen: ' + 'q' +\n            /*parser*/\n            this.currentPage + '.' + (i + 1));\n            item = document.getElementById('q' +\n            /*parser*/\n            this.currentPage + '.' + (i + 1)).getElementsByTagName('fieldset'); //document.getElementById('q' + /*parser*/this.currentPage + '.' + (i + 1));\n\n            if (!item.length) item = document.getElementById('q' +\n            /*parser*/\n            this.currentPage + '\\\\.' + (i + 1));\n            if (item.length) item[0].style.backgroundColor = '#ffffff'; //if (item) item.style.backgroundColor = \"#ffffff\";\n          }\n        }\n      }\n    }\n\n    return foundNA;\n  }\n  /* returns true if all questions are answered, false if at least one answer is not*/\n  ;\n\n  _proto.checkAnswers = function checkAnswers() {\n    //for each answers[pagenum-1] answer!= N/A\n    //var foundNA = false;\n    var dontcheckanswers = document.getElementById('dontcheckanswers');\n    if (dontcheckanswers && dontcheckanswers.prop('checked')) return true; //don't check in editor mode\n\n    var foundNA = this.checkAnswersInScreen();\n    return !foundNA;\n  };\n\n  _proto.highlightNonAnswered = function highlightNonAnswered() {\n    var item = document.getElementById('#notification');\n    item.css('background-color', '#fdd');\n    item.html(' Pro pokračování, prosím, vyplňte vyznačené otázky!');\n  };\n\n  _proto.hideNonAnswered = function hideNonAnswered() {\n    document.getElementById('notification').innerHTML = '';\n  };\n\n  _proto.nexttestitem = function nexttestitem() {\n    if (this.checkAnswers()) {\n      //check whether all mandatory questions are answered - set to non-default value\n      if (this.highlightEducation()) {\n        this.controller.preview.innerHTML = this.nextpage();\n        /*parser*/\n\n        this.highlighted = false;\n        this.evaluateScripts();\n        this.hideNonAnswered();\n      } else {//not highlighted\n      }\n    } else {\n      this.highlightNonAnswered();\n    }\n  } // TODO convert $ to aurelia based html processing\n  ;\n\n  _proto.highlightEducation = function highlightEducation() {\n    var atleastoneeduanswer = false;\n\n    if (\n    /*parser*/\n    this.educational) {\n      if (!\n      /*parser*/\n      this.result.answers[\n      /*parser*/\n      this.currentPage - 1]) return true;\n\n      if (\n      /*parser*/\n      this.highlighted) {\n        document.getElementById('notification').innerHTML = '';\n        return true;\n      }\n      /*parser*/\n\n\n      this.highlighted = true;\n\n      if (\n      /*parser*/\n      this.result.answers[\n      /*parser*/\n      this.currentPage - 1]) {\n        for (var i = 0; i <\n        /*parser*/\n        this.result.answers[\n        /*parser*/\n        this.currentPage - 1].length; i++) {\n          if (\n          /*parser*/\n          this.result.answers[\n          /*parser*/\n          this.currentPage - 1][i] && 'answer' in\n          /*parser*/\n          this.result.answers[\n          /*parser*/\n          this.currentPage - 1][i]) {\n            //fix bug 268\n            var item = document.getElementById('q' +\n            /*parser*/\n            this.currentPage + '\\\\.' + (i + 1)); //document.getElementById('q' + currentPage + '.' + (i + 1));\n            //disable editing the subelement within this form\n\n            item.find('input').prop('disabled', true);\n            item.find('option').prop('disabled', true);\n            item.find('.ui-slider').labeledslider('disable'); //console.log(\"#q\" + currentPage + \"\\\\.\" + (i + 1));\n            //if (item) item.style.backgroundColor = \"#eeffee\";\n\n            var aquestion =\n            /*parser*/\n            this.result.answers[\n            /*parser*/\n            this.currentPage - 1][i].question.trim();\n            var acase =\n            /*parser*/\n            this.result.answers[\n            /*parser*/\n            this.currentPage - 1][i].case;\n            var answer =\n            /*parser*/\n            this.result.answers[\n            /*parser*/\n            this.currentPage - 1][i].answer; //var myeduanswer;\n\n            if (\n            /*parser*/\n            this.eduresults[acase]) {\n              var myeduanswer =\n              /*parser*/\n              this.eduresults[acase].answer[aquestion];\n              console.log('eduanswer');\n              console.log(\n              /*parser*/\n              this.eduresults[acase]);\n              console.log(\"'\" + aquestion + \"'\");\n              console.log(Object.keys(\n              /*parser*/\n              this.eduresults[acase].answer));\n              console.log(myeduanswer);\n\n              if (myeduanswer) {\n                atleastoneeduanswer = true; //creating tooltip div\n\n                $(\"<div class='tooltipContent'>\" +\n                /*parser*/\n                this.eduresults[acase].note[aquestion] + '</div>').appendTo(item); //adding tooltip class to the form\n\n                item.addClass('tooltip'); //process all eduanswers;\n\n                var eduanswermulti = myeduanswer.split(';'); //show multiple values delimited by ;\n\n                eduanswermulti.forEach(function (eduanswer) {\n                  var hitem = item.find(\"[value|='\" + eduanswer + \"']\"); //selects <input>\n\n                  if (hitem.length > 0) {\n                    var nexthitem = hitem.next(); //selects related <label>\n                    //console.log(\"item:\" + item.prop('nodeName') + \" hitem:\" + hitem.prop('nodeName') + \" nexthitem:\" + nexthitem.prop('nodeName'));\n\n                    if (nexthitem.is('label')) {\n                      nexthitem.attr('style', 'background-color: lightgreen');\n                    } else if (hitem.is('option')) {\n                      hitem.attr('style', 'background-color: lightgreen;border:solid 2px green');\n                    }\n                  } else {\n                    // show in slider handle\n                    hitem = item.find('.ui-slider');\n\n                    if (hitem.length > 0) {\n                      //var idhitem = hitem.prop(\"id\");\n                      var currentvalue = hitem.labeledslider('value'); //keep current value\n\n                      var sliderid = hitem.prop('id');\n                      var slidernum = parseInt(Interpreter.extract(sliderid, 'slider'), 10);\n                      var eduanswerint = parseInt(eduanswer, 10);\n                      var eduanswerindex =\n                      /*parser*/\n                      this.sliderValues[slidernum].indexOf(eduanswerint); //moves slider handle to educational value\n\n                      if (eduanswerindex > -1) //move to edu value from sequence\n                        {\n                          //console.log(\"slidervalue:\" + sliderValues[slidernum][eduanswerindex]);\n                          hitem.labeledslider('value',\n                          /*parser*/\n                          this.sliderValues[slidernum][eduanswerindex]);\n                        } else //move to edu value\n                        {\n                          //console.log(\"normal value:\" + eduanswerint);\n                          hitem.labeledslider('value', eduanswerint); //move to edu value\n                        } //var handle = item.find(\".ui-slider-handle\");\n\n\n                      var oldhandle = hitem.find('.ui-slider-handle');\n                      var newhandle = hitem.find('.ui-slider-handle').clone(); //.appendTo(hitem); //clone the handle\n                      //slider already has some style - position, whihc must be preserved\n\n                      hitem.labeledslider('value', currentvalue); //return to current value - the clone will remain on the edu value\n\n                      var oldstyle = oldhandle.attr('style') + 'border:solid 2px blue;';\n                      var newstyle = newhandle.attr('style') + 'background:lightgreen;';\n                      newhandle.attr('style', newstyle);\n                      oldhandle.attr('style', oldstyle);\n                      hitem.labeledslider('disable');\n                      newhandle.appendTo(hitem); //hitem.find(\".ui-slider-handle\").last().attr(\"style\", \"background:green\");\n                    } else {//select\n                      }\n                  }\n                });\n              }\n            }\n          }\n        } //allanswers highlighted, enable tooltip\n\n\n        $('.tooltip').hover(function () {\n          var tooltip = $('> div', this).show();\n          var pos = tooltip.offset();\n          tooltip.hide();\n          var right = pos.left + tooltip.width();\n          var pageWidth = $(document).width();\n\n          if (pos.left < 0) {\n            tooltip.css('marginLeft', '+=' + -pos.left + 'px');\n          } else if (right > pageWidth) {\n            tooltip.css('marginLeft', '-=' + (right - pageWidth));\n          }\n\n          tooltip.fadeIn();\n        }, function () {\n          $('> div', this).fadeOut(function () {\n            $(this).css('marginLeft', '');\n          });\n        });\n      }\n\n      if (atleastoneeduanswer) {\n        var item2 = $('#notification');\n        item2.css('background-color', 'lightgreen');\n        item2.html('Vyznačeny jsou průměrné, nejvíce vybírané hodnoty na uvedené otázky.');\n      } else\n        /*parser*/\n        this.highlighted = false;\n\n      return !atleastoneeduanswer;\n    }\n\n    return true;\n  } //TODO add PsychoTestPauseUrl, construct pausedtestresult, implement resumetest(), add a select box with tests to resume into HTML, after selection load raw test, load results and go into the last screen,\n  ;\n\n  _proto.pausetest = function pausetest() {\n    if (!confirm('Do you want to postpone the test execution? Postponed test can be resumed later from the current screen.')) return; //store results, raw test and screen number into server\n\n    var pausedtestResult = {};\n    pausedtestResult.testname =\n    /*parser*/\n    this.testName; //{ get; set; }\n\n    pausedtestResult.screennumber =\n    /*parser*/\n    this.currentPage; //{ get; set; }\n\n    pausedtestResult.rawtestdefinition =\n    /*parser*/\n    this.currentTest; //{ get; set; }\n    //pausedtestResult.loginname = prompt(\"Enter your unique ID, e.g. email address\");\n\n    pausedtestResult.temporalresults = JSON.stringify(\n    /*parser*/\n    this.result.answers);\n    var METHOD = 'PUT';\n\n    if (\n    /*parser*/\n    this.resumeid > 0) {\n      pausedtestResult.id =\n      /*parser*/\n      this.resumeid;\n      METHOD = 'POST';\n    }\n\n    $.ajax({\n      type: METHOD,\n      url: PsychoTestPauseUrl,\n      contentType: 'application/json',\n      dataType: 'json',\n      data: JSON.stringify(pausedtestResult),\n      processData: false,\n      success: this.pausetestcallback,\n      error: this.postAnswerErrorCallback\n    }); //console.log(\"TODO, not yet implemented pausetest()\");\n  };\n\n  _proto.pausetestcallback = function pausetestcallback(data) {\n    console.log('saved paused test. Response:'); //console.log(data)\n\n    pausedtestid = data.id;\n    this.focusPaused(); //calling back to focus the paused Tab\n  };\n\n  _proto.evaluateScripts = function evaluateScripts() {\n    //evaluate graphs\n    var codes = this.controller.preview.getElementsByTagName('script'); //document.getElementById('preview').getElementsByTagName('script');\n    //console.log(\"codes\"+codes);\n    //console.log(codes);\n\n    for (var i = 0; i < codes.length; i++) {\n      eval(codes[i].text);\n    }\n  };\n\n  _proto.newTrans = function newTrans(row) {\n    var tr = {\n      'raw': row\n    };\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].isZvuk(row)) {\n      var soundtype = _dsl__WEBPACK_IMPORTED_MODULE_5__[\"Dsl\"].stimuliType(row);\n\n      if (soundtype) {\n        if (soundtype[1] === 'waveform') {\n          tr = {\n            'isstimulus': true,\n            'iswaveform': true,\n            'src': 'stimuli/3.wav',\n            'id': 'audio2',\n            'type': 'audio/wav',\n            'raw': row\n          };\n        }\n      }\n    }\n\n    console.log('new translation row,tr:', row, tr);\n    return tr;\n  };\n\n  return Interpreter;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3QiX\n");

/***/ }),

/***/ "MmLu":
/*!***************************************!*\
  !*** ./src/components/preprocesor.js ***!
  \***************************************/
/*! exports provided: Preprocesor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Preprocesor\", function() { return Preprocesor; });\n/* harmony import */ var _dsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsl */ \"UbAQ\");\n/* harmony import */ var _interpreter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpreter */ \"3QiX\");\n\n //splice array into array\n\nArray.prototype.spliceArray = function (index, n, array) {\n  return Array.prototype.splice.apply(this, [index, n].concat(array));\n};\n\nvar TestState = {\n  UND: 0,\n  OBR: 1,\n  PAR: 2,\n  KAT: 3,\n  END: 4,\n  START: 5,\n  EXT: 6,\n  STIMGR: 7,\n  REPSTIM: 8,\n  REPGRP: 9\n};\nvar Preprocesor = /*#__PURE__*/function () {\n  /**\n   * Created by tomaton on 10/22/2015.\n   */\n  function Preprocesor(parent) {\n    this.currentCursor = 0;\n    this.state = TestState.UND; // getState(this.splitted, currentCursor++);\n\n    this.tstate = {};\n    this.myTest = '';\n    this.expandedTest = [];\n    this.expandedGroup = [];\n    this.replaceableStimuli = [];\n    this.tempTest = '';\n    this.parent = parent; //expects parser\n  } //console.log(this.splitted);\n\n\n  var _proto = Preprocesor.prototype;\n\n  _proto.getState = function getState() {\n    //console.log(\"getState() \"+currentCursor);\n    //console.log(this.splitted[currentCursor]);\n    if (this.currentCursor >= this.splitted.length) return TestState.END;\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isParovy(this.splitted[this.currentCursor])) return TestState.PAR;\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isKategorie(this.splitted[this.currentCursor])) return TestState.KAT;\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isObrazovka(this.splitted[this.currentCursor])) return TestState.OBR;\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isExtends(this.splitted[this.currentCursor])) return TestState.EXT;\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isStimuliGroup(this.splitted[this.currentCursor])) return TestState.STIMGR; //        if (Dsl.isReplaceStimuli(this.splitted[this.currentCursor])) return TestState.REPSTIM;\n    //        if (Dsl.isReplaceGroup(this.splitted[this.currentCursor])) return TestState.REPGRP;\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isRandomPairs(this.splitted[this.currentCursor])) {\n      this.tstate.randompairs = true;\n      return TestState.UND;\n    }\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isPoradiVNtici(this.splitted[this.currentCursor])) {\n      this.tstate.poradivnticinahodne = true;\n      return TestState.UND;\n    }\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isPoradiZvuku(this.splitted[this.currentCursor])) {\n      this.tstate.poradizvukunahodne = true;\n      return TestState.UND;\n    }\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isPoradiCase(this.splitted[this.currentCursor])) {\n      this.tstate.poradicasenahodne = true;\n      return TestState.UND;\n    }\n\n    if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isType(this.splitted[this.currentCursor])) this.parent.translateType(this.splitted[this.currentCursor]); // feature #208, type in the beginning of test definition\n\n    return TestState.UND;\n  };\n\n  _proto.copyTest = function copyTest() {\n    this.currentCursor++;\n    this.myTest += this.splitted[this.currentCursor - 1] + '\\n'; //copy of row with obrazovka or test ...\n\n    while (this.getState() === TestState.UND) {\n      this.myTest += this.splitted[this.currentCursor++] + '\\n';\n    } //copy of rows\n\n  } //all after the cursor will be shuffled per screens\n  ;\n\n  _proto.shuffleTest = function shuffleTest() {\n    //readalltestToArray\n    var tempcursor = this.currentCursor++;\n    var testArray = [];\n\n    while (this.getState() !== TestState.END) {\n      this.tempTest = this.splitted[this.currentCursor - 1] + '\\n';\n\n      while (this.getState() === TestState.UND) {\n        this.tempTest += this.splitted[this.currentCursor++] + '\\n';\n      } //copy of rows\n\n\n      testArray.push(this.tempTest); //each item is a screen\n\n      this.currentCursor++;\n    } //shuffle screens\n\n\n    testArray.shuffle(); //expandArrayToText\n\n    this.currentCursor = tempcursor;\n    var testCase = [];\n\n    for (var i = 0; i < testArray.length; i++) {\n      testCase = testArray[i].split('\\n');\n\n      for (var j = 0; j < testCase.length; j++) {\n        this.splitted[this.currentCursor++] = testCase[j];\n      }\n    } //console.log(\"test after shuffle\", this.splitted);    //this.splitted[this.currentCursor]\n\n\n    this.currentCursor = tempcursor;\n  };\n\n  _proto.collectSounds = function collectSounds() {\n    var zvuks = [];\n\n    while (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].startsWithZvuk(this.splitted[this.currentCursor])) {\n      zvuks.push(this.splitted[this.currentCursor++]);\n    }\n\n    if (this.tstate.poradizvukunahodne) {\n      zvuks.shuffle(); //console.log(\"zvuks after random shuffling:\", zvuks);\n    }\n\n    return zvuks;\n  };\n\n  _proto.foreachSoundGenerateObrazovka = function foreachSoundGenerateObrazovka(zvuks, title) {\n    var obrazovkacontent = [];\n\n    while (this.getState() === TestState.UND) {\n      obrazovkacontent.push(this.splitted[this.currentCursor++]);\n    }\n\n    for (var i = 0; i < zvuks.length; i++) {\n      this.myTest += 'screen ' + _interpreter__WEBPACK_IMPORTED_MODULE_1__[\"Interpreter\"].extract(title, 'screen per 1') + '\\n' + zvuks[i] + '\\n';\n\n      for (var j = 0; j < obrazovkacontent.length; j++) {\n        this.myTest += obrazovkacontent[j] + '\\n';\n      }\n    }\n  };\n\n  _proto.expandKategorie = function expandKategorie() {\n    var title = this.splitted[this.currentCursor++]; //skip over the row defining the kategory test\n\n    while (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].startsWithComment(this.splitted[this.currentCursor])) {\n      //skip over comments - there might be some styling\n      title += '\\n' + this.splitted[this.currentCursor++];\n    }\n\n    var zvuks = this.collectSounds();\n    this.foreachSoundGenerateObrazovka(zvuks, title);\n  };\n\n  _proto.makePairs = function makePairs(zvuks) {\n    var combinations = []; //recursive generation of all possib/le pairs\n\n    var getpairs = function getpairs(active, rest) {\n      //console.log(\"iteration\");\n      //console.log(active);\n      //console.log(rest)\n      if (rest.length === 0) {\n        if (active.length === 2) {\n          combinations.push(active); //console.log(\"found:\");\n          //console.log(active);\n        }\n      } else {\n        var active1 = active.slice();\n        active.push(rest[0]);\n        getpairs(active, rest.slice(1));\n        getpairs(active1, rest.slice(1));\n      }\n    };\n\n    this.getpairs([], zvuks);\n    return combinations;\n  };\n\n  _proto.foreachPairofSoundsGenerateObrazovka = function foreachPairofSoundsGenerateObrazovka(pairs, title) {\n    var obrazovkacontent = [];\n\n    while (this.getState() === TestState.UND) {\n      obrazovkacontent.push(this.splitted[this.currentCursor++]);\n    }\n\n    for (var i = 0; i < pairs.length; i++) {\n      this.myTest += 'screen ' + _interpreter__WEBPACK_IMPORTED_MODULE_1__[\"Interpreter\"].extract(title, 'screen per 2') + '\\n' + 'column\\n' + pairs[i][0] + '\\n' + pairs[i][1] + '\\n';\n\n      for (var j = 0; j < obrazovkacontent.length; j++) {\n        this.myTest += obrazovkacontent[j] + '\\n';\n      }\n      /*myTest += \"sloupec\\n\" + pairs[i][1] + \"\\n\";\n       for (var j = 0; j < obrazovkacontent.length; j++) {\n       myTest += obrazovkacontent[j] + \"\\n\";\n       }*/\n\n    } //fix bug ranodm in tuple\n\n  };\n\n  _proto.expandParovy = function expandParovy() {\n    var title = this.splitted[this.currentCursor++]; //skip row defining par test\n\n    var zvuks = this.collectSounds();\n    var pairs = this.makePairs(zvuks);\n    if (this.tstate.poradicasenahodne || this.tstate.randompairs) pairs.shuffle();\n    if (pairs.length === 0) console.log('Expected more rows with stimulus to generate pairs, but no pairs generated.');\n    this.foreachPairofSoundsGenerateObrazovka(pairs, title);\n  } //expands inherited test - read definition into separated array.\n  ;\n\n  _proto.expandInheritance = function expandInheritance() {\n    var parentrow = this.splitted[this.currentCursor].split(/[ ;,]+/); //each inherited test is separated\n    //for (var i=indexofnames;i<parentrow.lengt h;i++){ //\n    //extends [0] test [1] withstimuli [2] a,b,c,d [3,4,5,6]\n\n    var parent = parentrow[1]; //gets from url test definition\n\n    var myurl = PsychoTest2Url + parent;\n    $.ajax({\n      dataType: 'json',\n      url: myurl,\n      data: null,\n      success: function success(testdto) {\n        if (parser.prep.expandedTest[parent]) console.log('expandInheritance, Warning: test definition already exists for ' + parent);\n        parser.prep.expandedTest[parent] = testdto[0].definition;\n      },\n      error: function error(jq, status, _error) {\n        console.log('expandInheritance, Error: When loading data for the test definition ' + myurl + ' ' + _error);\n      },\n      async: false\n    });\n\n    if (parentrow.length > 3) {\n      //extends with replacement of stimuli\n      if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isWithStimuli(parentrow[2])) {\n        var stimuli = parentrow.slice(3); //stimuli names without previous -- TODO parse with apostrophes\n        //this.replaceStimuli(parent,stimuli);//replace stimuli with new one from array\n        //inserts a extended test with replaced stimuli\n\n        this.splitted.spliceArray(this.currentCursor, 1, this.replaceStimuli(this.expandedTest[parent], stimuli));\n      } else if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isWithStimuligroup(parentrow[2])) {\n        var parent2 = parentrow[3];\n        myurl = PsychoTest2Url + parent2;\n        $.ajax({\n          dataType: 'json',\n          url: myurl,\n          data: null,\n          success: function success(testdto) {\n            if (parser.prep.expandedGroup[parent2]) console.log('expandGroup, Warning: test definition already loaded for ' + parent2);\n            parser.prep.expandedGroup[parent2] = testdto[0].definition;\n          },\n          error: function error(jq, status, _error2) {\n            console.log('expandGroup, Error: When loading data for the test definition ' + myurl + ' ' + _error2);\n          },\n          async: false\n        });\n\n        if (this.expandedTest[parent]) {\n          if (this.expandedGroup[parent2]) this.splitted.spliceArray(this.currentCursor, 1, this.replaceStimuliGroup(this.expandedTest[parent], this.expandedGroup[parent2]));else {\n            console.log('expandinheritance: Info, nothing to replace from group');\n            this.splitted.spliceArray(this.currentCursor, 1, this.expandedTest[parent]);\n          }\n        } else console.log('expandinheritance: Info, nothing to expand');\n      } else console.log('expandinheritance: Warning unrecognized extend attribute:' + parentrow[2]);\n    } else {\n      //extends without replacement\n      if (this.expandedTest[parent]) {\n        console.log('expandinheritance: Info, nothing to replace from group');\n        this.splitted.spliceArray(this.currentCursor, 1, this.splitExtendTestDefinition(this.expandedTest[parent]));\n      } else console.log('expandinheritance: Info, nothing to expand');\n    }\n\n    this.currentCursor++;\n  } //expands stimuligroup into the current test - reads all stimulus in a group into separate array\n  ;\n\n  _proto.expandStimuliGroup = function expandStimuliGroup() {\n    var parentrow = this.splitted[this.currentCursor].split(/[ ;,]+/); //each expanded group is split\n    //for (var i=indexofnames;i<parentrow.lengt h;i++){ //\n    //stimuligroup [0] [groupname] [1...]\n\n    var parent = parentrow[1]; //gets from url test definition\n\n    var myurl = PsychoTest2Url + parent; //TODO move ajax call to shared class\n\n    $.ajax({\n      dataType: 'json',\n      url: myurl,\n      data: null,\n      success: function success(testdto) {\n        if (this.expandedGroup[parent]) console.log('expandGroup, Warning: test definition already loaded for ' + parent);\n        this.expandedGroup[parent] = testdto[0].definition;\n      },\n      error: function error(jq, status, _error3) {\n        console.log('expandGroup, Error: When loading data for the test definition ' + myurl + ' ' + _error3);\n      },\n      async: false\n    });\n\n    if (this.expandedGroup[parent]) {\n      this.splitted.spliceArray(this.currentCursor, 1, this.splitStimuliDefinition(this.expandedGroup[parent]));\n    } else console.log('expandGroup: Info, nothing to expand from stimuligroup.'); //this.currentCursor++;\n\n  } //splits only stimulus from group definition into array\n  ;\n\n  _proto.splitExtendTestDefinition = function splitExtendTestDefinition(testdefinition) {\n    var rawtest = testdefinition.split('\\n'); //rawtest.shift(); //removes first row -- usually definition of test name\n\n    rawtest[0] = '# ' + rawtest[0]; //comments out the first row -- usually definition of test name\n\n    return rawtest;\n  } //splits only stimulus from group definition into array\n  ;\n\n  _proto.splitStimuliDefinition = function splitStimuliDefinition(groupdefinition) {\n    var rawstimuli = groupdefinition.split('\\n');\n    var stimuli = []; //    var newrows = [];\n\n    for (var i = 1; i < rawstimuli.length; i++) {\n      //step over first row\n      var mystimuli = rawstimuli[i].trim();\n\n      if (mystimuli.length > 0) {\n        stimuli.push('stimulus ' + rawstimuli[i]);\n      }\n    } //adds only rows with stimulus prefix\n\n\n    return stimuli;\n  } //replace each occurence of stimuli with a stimulus row from group definition,\n  // if some stimulus remains, it is inserted at the last position of stimulus in definition\n  ;\n\n  _proto.replaceStimuliGroup = function replaceStimuliGroup(definition, groupdefinition) {\n    var defrows = definition.split('\\n'); //splits per row\n\n    var stimuli = this.splitStimuliDefinition(groupdefinition);\n    var laststimulusindex = 0;\n\n    for (var i = 0; i < defrows.length; i++) {\n      //parse each row\n      if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isZvuk(defrows[i])) {\n        if (stimuli.length > 0) {\n          laststimulusindex = i;\n          defrows[i] = stimuli.shift();\n        } //stimulus keyword with new stimulus from array\n        else console.log('replaceStimuli: Warning not enough stimuli for replacement.');\n      }\n    }\n\n    if (stimuli.length > 0) {\n      console.log('replaceStimuli: Info adding remaining stimuli after last stimulus in extended test');\n      defrows.spliceArray(laststimulusindex, 0, stimuli);\n    }\n\n    return defrows;\n  } //replace each occurence of stimuli with a stimulus row from group definition,\n  // if some stimulus remains, it is inserted at the last position of stimulus in definition\n  ;\n\n  _proto.replaceStimuli = function replaceStimuli(definition, stimuli) {\n    var defrows = definition.split('\\n'); //splits per row\n\n    defrows[0] = '# ' + defrows[0]; //comment out first row of definition --usually testname\n    //    var newrows = [];\n\n    var laststimulusindex = 0;\n\n    for (var i = 0; i < stimuli.length; i++) {\n      stimuli[i] = 'stimulus ' + stimuli[i];\n    } //adds stimulus keyword as prefix\n\n\n    for (var _i = 0; _i < defrows.length; _i++) {\n      //parse each row\n      if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isZvuk(defrows[_i])) {\n        if (stimuli.length > 0) {\n          laststimulusindex = _i;\n          defrows[_i] = stimuli.shift();\n        } //stimulus keyword with new stimulus from array\n        else console.log('replaceStimuli: Warning not enough stimuli for replacement.');\n      }\n    }\n\n    if (stimuli.length > 0) {\n      console.log('replaceStimuli: Info adding remaining stimuli after last stimulus in extended test');\n      defrows.spliceArray(laststimulusindex + 1, 0, stimuli);\n    }\n\n    return defrows;\n  } //preprocessing\n  //copy everything before first state\n  //this.currentCursor++;\n  ;\n\n  _proto.preprocessTest = function preprocessTest(rawTest) {\n    this.currentCursor = 0;\n    this.splitted = rawTest.split('\\n'); //split to rows and parse rows\n\n    this.state = TestState.UND; // getState(this.splitted, currentCursor++);\n\n    this.tstate = {};\n    this.myTest = '';\n    this.tempTest = ''; //copy between test and first screen\n\n    this.copyTest();\n    if (this.tstate.poradicasenahodne) this.shuffleTest(); //console.log(\"cursor \" + this.currentCursor + \" row \" + this.splitted[this.currentCursor]);\n\n    this.state = this.getState();\n\n    while (this.state !== TestState.END) {\n      if (this.state === TestState.OBR) this.copyTest();else if (this.state === TestState.KAT) this.expandKategorie();else if (this.state === TestState.PAR) this.expandParovy();else if (this.state === TestState.EXT) this.expandInheritance();else if (this.state === TestState.STIMGR) this.expandStimuliGroup(); //        else if (this.state == TestState.REPSTIM) this.replaceStimuli();\n      //        else if (this.state == TestState.REPGRP) this.replaceStimuliGroup();\n      else {\n          //console.log(\"Parse error. \" + this.state + \". Not expected state. Line \" + this.currentCursor + \" row:\" + this.splitted[this.currentCursor++]);\n          this.myTest += this.splitted[this.currentCursor++] + '\\n'; //probably extension - copy test.\n        }\n      this.state = this.getState(); //if (this.currentCursor<this.splitted.length) console.log(\"cursor \" + this.currentCursor + \" row \" + this.splitted[this.currentCursor]);\n    } //return coppiedTest;\n\n\n    return this.myTest;\n  } //flatenize inheritance\n  //TODO continue with recursive - flatenize, remove statement from preprocess and add them to recursive call, or use ajax(async:false)\n  //flatenize -- collect artefacts\n  ;\n\n  _proto.flatenizeTest = function flatenizeTest(rawTest) {\n    this.splitted = rawTest.split('\\n');\n    var i = 0;\n    var j = 0;\n    var artefacts = [];\n\n    for (i = 0; i < this.splitted.length; i++) {\n      if (_dsl__WEBPACK_IMPORTED_MODULE_0__[\"Dsl\"].isExtends(this.splitted[i]) || isStimuliGroup(this.splitted[i])) {\n        var parentrow = this.splitted[i].split(/[ ;,]+/);\n\n        for (j = 1; j < parentrow.length; j++) {\n          artefacts.push(parentrow[j]); //add artefact names that will be recursively obtained from server\n        }\n      }\n    }\n  };\n\n  _proto.loadTestDefinition = function loadTestDefinition(row) {\n    var parentrow = this.splitted[this.currentCursor++].split(' ');\n\n    for (var i = 1; i < parentrow.length; i++) {\n      var parent = parentrow[i];\n      this.myTest += this.getTestDefinition(parent); //gets test definition by name, skip first row with test name and copy&paste to\n    }\n  };\n\n  return Preprocesor;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///MmLu\n");

/***/ }),

/***/ "OOUQ":
/*!*************************************!*\
  !*** ./src/components/psychoapi.js ***!
  \*************************************/
/*! exports provided: PsychoApi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PsychoApi\", function() { return PsychoApi; });\n/* harmony import */ var aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-fetch-client */ \"qQke\");\n\n/* Provides methods to return promise of data from REST Project api*/\n\nvar PsychoApi = /*#__PURE__*/function () {\n  function PsychoApi(httpclient) {\n    this.httpclient = httpclient;\n    this.httpclient.configure(function (config) {\n      config.rejectErrorResponses().withBaseUrl('').withDefaults({\n        credentials: 'include',\n        headers: {\n          'Accept': 'application/json',\n          'X-Requested-With': 'Fetch'\n        }\n      });\n    });\n    this.apiurl = localStorage.getItem('psychotest.apiurl');\n\n    if (this.apiurl === null) {\n      if (window.location.hostname === 'localhost') this.apiurl = '/api';else this.apiurl = 'https://wl-virtualfolder.tk/api'; //TODO allow selection of predefined api urls\n    }\n\n    this.staticurl = localStorage.getItem('psychotest.staticurl');\n    if (this.staticurl === null) this.staticurl = 'test/';\n    this.projectapiurl = '/project';\n    this.userinfoapiurl = '/userinfo';\n    this.psychotestapiurl = '/psychotest';\n    this.resulturl = '/psychotestresult';\n    this.pausedtesturl = '/psychotestpaused';\n    this.b2accessendpoint = '/b2access/endpoint';\n    this.remote = new Map();\n    this.remote.set('https://webdav.pcloud.com/HAMU-Psychotest', {\n      'username': '',\n      'password': ''\n    }); //this requires also authentication Basic: username:password in base64\n    //this.remoteusername = '';\n    //this.remotepassword = '';\n\n    this.testdefinition = undefined;\n    this.testid = '';\n    this.testsource = '';\n    this.userinfo = false;\n  }\n\n  var _proto = PsychoApi.prototype;\n\n  _proto.getMetadatas = function getMetadatas(id) {\n    var metadataurl = this.dataurl + '/' + id + '/metadata';\n    return this.httpclient.fetch(metadataurl).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return data;\n    });\n  }\n  /**\n   * Performs GET request to REST API and returns definition item of returned test record.\n   * @returns { data.definition item }\n   */\n  ;\n\n  _proto.getApiTestDefinition = function getApiTestDefinition(testid) {\n    var _this = this;\n\n    return this.httpclient.fetch(this.apiurl + this.psychotestapiurl + '/' + testid).then(function (response) {\n      var testheaders = response.headers; //console.log('getapi test headers',testheaders.get);\n\n      _this.testetag = testheaders.get('ETag');\n      return response.json();\n    }).then(function (data) {\n      //        console.log('Psychoapi.getselectedtestdefinition:', data);\n      return data.definition;\n    });\n  };\n\n  _proto.patchApiTestDefinition = function patchApiTestDefinition(testid, testdef) {\n    var _this2 = this;\n\n    var body = {\n      definition: testdef,\n      owner: this.userinfo.id ? this.userinfo.id : ''\n    };\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'Fetch' //'If-Match': this.testetag\n\n    });\n    console.log('saving test', testid);\n    return this.httpclient.fetch(this.apiurl + this.psychotestapiurl + '/' + testid, {\n      method: 'PATCH',\n      body: Object(aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"json\"])(body),\n      headers: headers\n    }).then(function (response) {\n      var testheaders = response.headers; //console.log('getapi test headers',testheaders.get);\n\n      _this2.testetag = testheaders.get('ETag');\n      return response.json();\n    }).then(function (data) {\n      //        console.log('Psychoapi.getselectedtestdefinition:', data);\n      return data.definition;\n    });\n  };\n\n  _proto.putApiTestDefinition = function putApiTestDefinition(testid, testdef) {\n    var _this3 = this;\n\n    var body = {\n      definition: testdef,\n      owner: this.userinfo.id ? this.userinfo.id : ''\n    };\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'Fetch',\n      'If-Match': this.testetag\n    });\n    console.log('saving test', testid);\n    return this.httpclient.fetch(this.apiurl + this.psychotestapiurl + '/' + testid, {\n      method: 'PUT',\n      body: Object(aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"json\"])(body),\n      headers: headers\n    }).then(function (response) {\n      var testheaders = response.headers; //console.log('getapi test headers',testheaders.get);\n\n      _this3.testetag = testheaders.get('ETag');\n      return response.json();\n    }).then(function (data) {\n      //        console.log('Psychoapi.getselectedtestdefinition:', data);\n      return data.definition;\n    });\n  };\n\n  _proto.postApiTestDefinition = function postApiTestDefinition(testdef, name) {\n    var _this4 = this;\n\n    //put owner information, if no owner -TODO reject posting\n    var body = {\n      definition: testdef,\n      name: name,\n      snippet: testdef.slice(0, 80),\n      owner: this.userinfo.id ? this.userinfo.id : ''\n    };\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n    return this.httpclient.fetch(this.apiurl + this.psychotestapiurl, {\n      method: 'POST',\n      body: Object(aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"json\"])(body),\n      headers: headers\n    }).then(function (response) {\n      var testheaders = response.headers; //console.log('getapi test headers',testheaders.get);\n\n      _this4.testetag = testheaders.get('ETag');\n      return response.json();\n    });\n  };\n\n  _proto.delete = function _delete(testid, testsource) {\n    if (!testsource) {\n      return this.httpclient.fetch(this.apiurl + this.psychotestapiurl + '/' + testid, {\n        method: 'DELETE'\n      });\n    }\n  }\n  /**\n   * performs GET request to REST API with projection to snippet, name, owner\n   * @returns { _items returned in response - array of tests }\n   */\n  ;\n\n  _proto.getApiTests = function getApiTests() {\n    return this.httpclient.fetch(this.apiurl + this.psychotestapiurl + '?where={\"owner\":\"' + (this.userinfo.id ? this.userinfo.id : '') + '\"}&projection={\"snippet\":1,\"name\":1,\"owner\":1,\"_updated\":1,\"_created\":1}').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      //console.log('Pssychoapi.gettests:', data);\n      return data._items;\n    });\n  };\n\n  _proto.retrieveProjects = function retrieveProjects() {\n    return this.httpclient.fetch(this.apiurl + this.projectapiurl).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log('Psychoapi.getprojects:', data);\n      return data;\n    }).catch(function (error) {\n      console.log('error when obtaining project list', error);\n    });\n  };\n\n  _proto.getRemoteTestDefinition = function getRemoteTestDefinition(source, testid) {\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n\n    if (this.remote.has(source)) {\n      headers.append('Authorization', 'Basic ' + btoa(this.remote.get(source).username + ':' + this.remote.get(source).password));\n    }\n\n    return this.httpclient.fetch(source + testid, {\n      headers: headers\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      return data;\n    });\n  };\n\n  _proto.putRemoteTestDefinition = function putRemoteTestDefinition(source, testid, testdef) {\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n    console.log('saving test', source, testid);\n\n    if (this.remote.has(source)) {\n      headers.append('Authorization', 'Basic ' + btoa(this.remote.get(source).username + ':' + this.remote.get(source).password));\n    }\n\n    var body = testdef;\n    return this.httpclient.fetch(source + testid, {\n      method: 'PUT',\n      headers: headers,\n      body: body\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      return data;\n    });\n  };\n\n  _proto.getStaticTests = function getStaticTests() {\n    return this.getRemoteTests(this.staticurl);\n  };\n\n  _proto.getRemoteTests = function getRemoteTests(source) {\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n\n    if (this.remote.has(source)) {\n      headers.append('Authorization', 'Basic ' + btoa(this.remote.get(source).username + ':' + this.remote.get(source).password));\n    }\n\n    return this.httpclient.fetch(source + 'index.json', {\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return data.map(function (x) {\n        x.source = source;\n        return x;\n      });\n    }); //adds source item to every element\n  };\n\n  _proto.getTestDefinition = function getTestDefinition(id, source) {\n    this.testid = id;\n    this.testsource = source;\n\n    if (this.testsource) {\n      return this.getRemoteTestDefinition(this.testsource, this.testid).then(function (data) {\n        //console.log('data');\n        return data;\n      });\n    } else if (this.testid) {\n      return this.getApiTestDefinition(this.testid).then(function (data) {\n        //console.log('data');\n        return data; //this.editor.setValue(data);\n      });\n    }\n\n    return new Promise(function (resolve) {});\n  };\n\n  _proto.saveTest = function saveTest(td, name) {\n    var _this5 = this;\n\n    //console.log('saving test:', td);\n    this.testdefinition = td;\n\n    if (this.testsource) {\n      return this.putRemoteTestDefinition(this.testsource, this.testid, this.testdefinition).catch(function (error) {\n        alert('Error when saving the test:', error.message);\n      });\n    } else if (this.testid) {\n      return this.patchApiTestDefinition(this.testid, this.testdefinition).catch(function (error) {\n        alert('Error when saving the test:', error.message);\n      });\n    } //create new\n\n\n    return this.postApiTestDefinition(this.testdefinition, name).then(function (x) {\n      _this5.testid = x._id;\n      _this5.testetag = x._etag;\n    });\n  };\n\n  _proto.getUserInfo = function getUserInfo() {\n    var _this6 = this;\n\n    // returns userinfo data\n    if (this.userinfo) return new Promise(function (resolve, reject) {\n      resolve(_this6.userinfo);\n    });\n    return this.httpclient.fetch(this.apiurl + this.userinfoapiurl).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this6.userinfo = data;\n      return data;\n    });\n  };\n\n  _proto.save = function save(surl, aurl) {\n    localStorage.setItem('psychotest.apiurl', aurl);\n    localStorage.setItem('psychtoest.staticurl', surl);\n    this.apiurl = localStorage.getItem('psychotest.apiurl');\n    this.staticurl = localStorage.getItem('psychotest.staticurl');\n  };\n\n  _proto.load = function load() {\n    this.apiurl = localStorage.getItem('psychotest.apiurl');\n    if (this.apiurl === null) this.apiurl = '/api';\n    this.staticurl = localStorage.getItem('psychotest.staticurl');\n    if (this.staticurl === null) this.staticurl = 'test/';\n    return [this.staticurl, this.apiurl];\n  };\n\n  _proto.reset = function reset() {\n    this.apiurl = '/api'; //can be http://localhost:8080 or other\n\n    this.staticurl = 'test/';\n    localStorage.clear();\n    return [this.staticurl, this.apiurl];\n  };\n\n  _proto.postResults = function postResults(testResult) {\n    //let body = {definition: testdef, name: name, snippet: testdef.slice( 0, 80), owner: this.userinfo.id ? this.userinfo.id : ''};\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n    return this.httpclient.fetch(this.apiurl + this.resulturl, {\n      method: 'POST',\n      body: Object(aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"json\"])(testResult),\n      headers: headers\n    }).then(function (response) {\n      var testheaders = response.headers; //console.log('getapi test headers',testheaders.get);\n      //this.testetag = testheaders.get('ETag');\n\n      return response.json();\n    });\n  };\n\n  _proto.deletePausedTest = function deletePausedTest(id) {\n    return this.httpclient.fetch(this.apiurl + this.pausedtesturl + '/' + id, {\n      method: 'DELETE'\n    });\n  };\n\n  _proto.releasePausedTest = function releasePausedTest() {\n    var _this7 = this;\n\n    if (this.resumeid && this.resumeid > 0) {\n      this.deletePausedTest(this.resumeid).then(function (data2) {\n        if (data2.ok) {\n          _this7.resumeid = 0;\n        }\n      });\n    }\n  };\n\n  _proto.postPausedTest = function postPausedTest(testres) {\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n    return this.httpclient.fetch(this.apiurl + this.pausedtesturl, {\n      method: 'POST',\n      body: Object(aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"json\"])(testres),\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return data;\n    });\n  };\n\n  _proto.putPausedTest = function putPausedTest(resumeid, testres) {\n    var headers = new Headers({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'Fetch'\n    });\n    return this.httpclient.fetch(this.apiurl + this.pausedtesturl + '/' + resumeid, {\n      method: 'PUT',\n      body: Object(aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"json\"])(testres),\n      headers: headers\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return data;\n    });\n  };\n\n  _proto.getPausedTest = function getPausedTest(resumeid) {\n    return this.httpclient.fetch(this.apiurl + this.pausedtesturl + '/' + resumeid).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return data;\n    });\n  };\n\n  _proto.getB2AccessEndpoint = function getB2AccessEndpoint() {\n    return this.httpclient.fetch(this.apiurl + this.b2accessendpoint).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      return data;\n    });\n  };\n\n  return PsychoApi;\n}();\nPsychoApi.inject = [aurelia_fetch_client__WEBPACK_IMPORTED_MODULE_0__[\"HttpClient\"]];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///OOUQ\n");

/***/ }),

/***/ "ROQc":
/*!************************************************!*\
  !*** ./src/components/ranking2dinterpreter.js ***!
  \************************************************/
/*! exports provided: Ranking2dinterpreter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ranking2dinterpreter\", function() { return Ranking2dinterpreter; });\nvar Ranking2dinterpreter = /*#__PURE__*/function () {\n  function Ranking2dinterpreter(parent) {\n    this.defaultSVG1 = \"<div id=\\\"rankingmodal\\\" class=\\\"w3-modal w3-small\\\" oncontextmenu=\\\"return false;\\\">\\n  <div class=\\\"w3-modal-content w3-small\\\">\\n   <header class=\\\"w3-container w3-teal\\\">\\n      <span onclick=\\\"document.getElementById('rankingmodal').style.display='none'\\\"\\n      class=\\\"w3-display-topright w3-btn w3-padding-4\\\">&times;</span>\\n      <span onclick=\\\"that.submitAnnotation(); document.getElementById('rankingmodal').style.display='none'\\\"\\n      class=\\\"w3-display-bottomright w3-btn w3-padding-4\\\">submit</span>\\n      <b>anotace stimulu <span id=\\\"annotationtitle\\\">...</span></b>\\n    </header>\\n    <div class=\\\"w3-container\\\">\\n      <textarea class=\\\"w3-input w3-border\\\" id=\\\"annotationcontent\\\"></textarea>\\n    </div>\\n  </div>\\n</div><div oncontextmenu=\\\"return false;\\\"><svg width=\\\"100%\\\" height=\\\"100%\\\" version=\\\"1.1\\\" viewBox=\\\"-10 0 800 200\\\" style=\\\"border-style:solid;border-width:1px;\\\"\\nxmlns=\\\"http://www.w3.org/2000/svg\\\" \\nxmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\nonload=\\\"that.init('ball',1)\\\"\";\n    this.defaultSVG11 = \"\\nonmouseup=\\\"that.mouseUp(evt,1,1)\\\"\\nonmousemove=\\\"that.mouseMove(evt)\\\" >\\n\";\n    this.defaultSVGball1 = \"\\n<g id=\\\"ball0\\\" dragy=\\\"0\\\"\\ndragx=\\\"0\\\" onmouseUp=\\\"that.contextMenu(evt);return false;\\\"\";\n    this.defaultSVGball11 = \"\\ntransform=\\\"translate(0,0)\\\">\\n<rect style=\\\"opacity:0.50000000000000000;fill:#acd8e6;stroke:#000000;stroke-width:2;fill-opacity:1;stroke-opacity:1\\\"\\nheight=\\\"18\\\"\\nwidth=\\\"40\\\"\\nry=\\\"9\\\"\\nrx=\\\"9\\\"\\nid=\\\"ball\\\"\\nx=\\\"0\\\"\\ny=\\\"0\\\" \\n/>\";\n    this.defaultSVGball2 = \"\\n<path style=\\\"fill:#c0c0c0;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\" d=\\\"m 21,3 l 15,5 -15,5 0,-10 z\\\" id=\\\"path3792\\\" onclick=\\\"document.getElementById('audio0').play();\\\" />\\n<title>audio0</title>\\n</g>  \";\n    this.defaultSVG2 = \"\\n<text id=\\\"descx\\\" x=\\\"0\\\" y=\\\"149\\\" font-size=\\\"8\\\" fill=\\\"black\\\">descX &#8594;</text>\\n<text id=\\\"descy\\\" x=\\\"-4\\\" y=\\\"141\\\" font-size=\\\"8\\\" fill=\\\"black\\\" transform=\\\"rotate(270,-4,141)\\\">descY &#8594;</text>\\n</svg></div>\";\n    this.draggingElement = null;\n    this.nMouseOffsetX = 0;\n    this.nMouseOffsetY = 0;\n    this.parent = parent;\n    this.ymax = 400; //max of y in \"serad\" svg graph\n\n    window.that = this;\n  } //create inner SVG element, where each sound is presented as a draggable icon, recounts size in contrast to default svg\n\n\n  var _proto = Ranking2dinterpreter.prototype;\n\n  _proto.translateSerad2d = function translateSerad2d(row, maxaudioid, pagenum, questionnum) {\n    var rowsplitted = row.split(/[;]+/);\n    this.ymax = maxaudioid * 50 + 50;\n    this.parent.result.setDefaultAnswer(pagenum, questionnum); //fix bug 198\n\n    var svgsuffix = rowsplitted.length > 1 ? this.defaultSVG2.replace('descX', rowsplitted[0]).replace('descY', rowsplitted[1]) : this.defaultSVG2;\n    var svgsuffix2 = svgsuffix.replace('y=\"149\"', 'y=\"' + (this.ymax - 2) + '\"').replace(/141/g, this.ymax - 9);\n    return this.defaultSVG1.replace('that.init(\\'ball\\',1)', 'that.init(\\'ball\\',' + maxaudioid + ')').replace('viewBox=\"-10 0 800 200\"', 'viewBox=\"-10 0 800 ' + this.ymax + '\"') + this.defaultSVG11.replace('that.mouseUp(evt,1,1)', 'that.mouseUp(evt,' + pagenum + ',' + questionnum + ')') + this.generateSoundBall(maxaudioid) + svgsuffix2; //rowsplitted.length>1 ? this.defaultSVG2.replace(\"descX\",rowsplitted[1]).replace(\"descY\",rowsplitted[2]) : this.defaultSVG2;\n  };\n\n  _proto.generateNonRandomArray = function generateNonRandomArray(n) {\n    var a = [];\n\n    for (var i = 0; i < n; i++) {\n      a[i] = i;\n    }\n\n    return a;\n  };\n\n  _proto.generateRandomArray = function generateRandomArray(n) {\n    var a = this.generateNonRandomArray(n);\n    var b = [];\n\n    for (var j = 0; j < n; j++) {\n      var k = Math.floor(Math.random() * (n - j));\n      b[j] = a[k];\n      a.splice(k, 1);\n    }\n\n    return b;\n  } //returns a[0] ..a[1-n] = k where k from 0 to 1-n\n  //for each sound generates an interactive SVG element\n  ;\n\n  _proto.generateSoundBall = function generateSoundBall(maxaudioid) {\n    console.log('maxaudioid:' + maxaudioid);\n    var soundBall = '';\n    var mapaudio = [];\n    if (this.parent.tstate.poradivnticinahodne) mapaudio = this.generateRandomArray(maxaudioid);else mapaudio = this.generateNonRandomArray(maxaudioid);\n\n    for (var i = 0; i < maxaudioid; i++) {\n      soundBall += this.defaultSVGball1.replace('id=\"ball0\" dragy=\"0\"', 'id=\"ball' + i + '\" dragy=\"' + i * 50 + '\"');\n      soundBall += this.defaultSVGball11.replace('translate(0,0)', 'translate(0,' + i * 50 + ')');\n      soundBall += this.defaultSVGball2.replace(/audio0/g, 'audio' + mapaudio[i]);\n    }\n\n    return soundBall;\n  } //draggable part inspired by http://www.codedread.com/dragtest2.svg\n  ;\n\n  _proto.inspect = function inspect(obj) {\n    var str = new Array();\n    var element = null;\n\n    for (element in obj) {\n      str[str.length] = element;\n    }\n\n    str.sort();\n    alert(obj + ':' + str.join(' '));\n  };\n\n  _proto.mouseDown = function mouseDown(evt) {\n    var target = evt.currentTarget;\n    that.draggingElement = target; //console.log('ranking2d mousedown',target)\n\n    if (target) {\n      var p = document.getElementsByTagName('svg')[0].createSVGPoint();\n      p.x = evt.clientX;\n      p.y = evt.clientY;\n      var m = that.getScreenCTM(document.getElementsByTagName('svg')[0]);\n      p = p.matrixTransform(m.inverse());\n      that.nMouseOffsetX = p.x - parseInt(target.getAttribute('dragx'), 10);\n      that.nMouseOffsetY = p.y - parseInt(target.getAttribute('dragy'), 10);\n      if (that.nMouseOffsetX > 61 && that.nMouseOffsetX < 91) play();\n    }\n  };\n\n  _proto.getDraggablePositions = function getDraggablePositions() {\n    var positions = '';\n    var draggable = document.getElementsByTagName('g');\n\n    for (var i = 0; i < draggable.length; i++) {\n      positions += Math.round(parseFloat(draggable[i].getAttribute('dragx'))) + ',' + Math.round(parseFloat(draggable[i].getAttribute('dragy'))) + ' ';\n    }\n\n    return positions;\n  };\n\n  _proto.mouseUp = function mouseUp(evt, pageNum, questionNum) {\n    //console.log('ranking2d mouseup')\n    that.draggingElement = null;\n    var value = that.getDraggablePositions();\n    window.ri.setAnswer(pageNum, questionNum, value);\n    that.nMouseOffsetX = 0;\n    that.nMouseOffsetY = 0;\n  };\n\n  _proto.mouseMove = function mouseMove(evt) {\n    var p = document.getElementsByTagName('svg')[0].createSVGPoint();\n    p.x = evt.clientX;\n    p.y = evt.clientY;\n    var m = that.getScreenCTM(document.getElementsByTagName('svg')[0]);\n    p = p.matrixTransform(m.inverse());\n    p.x -= that.nMouseOffsetX;\n    p.y -= that.nMouseOffsetY; //console.log('ranking2d mousemove dragging:', that.draggingElement)\n\n    if (that.draggingElement) {\n      //console.log('ranking2d mousemove position:', p.x, p.y)\n      if (p.x < 0) p.x = 0;else if (p.x > 800) p.x = 800 - 50; //on borders keep 0\n\n      if (p.y < 0) p.y = 0;else if (p.y > that.ymax - 50) p.y = that.ymax - 50;\n      that.draggingElement.setAttribute('dragx', p.x);\n      that.draggingElement.setAttribute('dragy', p.y);\n      that.draggingElement.setAttribute('transform', 'translate(' + p.x + ',' + p.y + ')');\n    }\n  };\n\n  _proto.displayCoords = function displayCoords(x, y, extra) {\n    var xNode = document.getElementById('xpos');\n    var yNode = document.getElementById('ypos');\n\n    if (xNode && yNode) {\n      xNode.firstChild.nodeValue = parseInt(x, 10) + extra;\n      yNode.firstChild.nodeValue = parseInt(y, 10) + extra;\n    }\n  };\n\n  _proto.displayRawText = function displayRawText(text) {\n    var textNode = document.getElementById('raw');\n\n    if (textNode) {\n      textNode.firstChild.nodeValue = text;\n    }\n  };\n\n  _proto.init = function init(prefix, count) {\n    console.log('ranking2d init');\n\n    for (var i = 0; i < count; i++) {\n      var ball = document.getElementById(prefix + i);\n      if (ball) ball.addEventListener('mousedown', that.mouseDown, false);\n    } //hide nav class with sounds bug #9\n\n\n    var soundsnav = document.querySelector('.sounds');\n    soundsnav.style.display = 'none';\n    /*var ball = document.getElementById(\"ball\");\n    var square = document.getElementById(\"square\");\n    var logo = document.getElementById(\"cd_logo\");\n    //var feed = document.getElementById(\"feed_icon\");\n    if(ball && square && logo) {\n        ball.addEventListener(\"mousedown\", mouseDown, false);\n        square.addEventListener(\"mousedown\", mouseDown, false);\n        logo.addEventListener(\"mousedown\", mouseDown, false);\n        //feed.addEventListener(\"mousedown\", mouseDown, false);\n    }\n    //displayRawText(\"Drag stuff around\");\n    */\n  };\n\n  _proto.displayMatrix = function displayMatrix(matrix) {\n    this.displayRawText(matrix.a + ', ' + matrix.b + ', ' + matrix.c + ', ' + matrix.d + ', ' + matrix.e + ', ' + matrix.f);\n  } // Following is from Holger Will since ASV3 and O9 do not support getScreenTCM()\n  // See http://groups.yahoo.com/group/svg-developers/message/50789\n\n  /*  parX;\n  parY;\n  ma;\n  mos;\n  w;\n  h;\n  sx;\n  sy;\n  s;*/\n  ;\n\n  _proto.getScreenCTM = function getScreenCTM(doc) {\n    if (doc.getScreenCTM) {\n      return doc.getScreenCTM();\n    }\n\n    var root = document.getElementsByTagName('svg')[0]; //doc\n\n    var sCTM = root.createSVGMatrix();\n    var tr = root.createSVGMatrix();\n    var par = root.getAttribute('preserveAspectRatio');\n    if (par === null || par === '') par = 'xMidYMid meet'; //setting to default value\n\n    var parX = par.substring(0, 4); //xMin;xMid;xMax\n\n    var parY = par.substring(4, 8); //YMin;YMid;YMax;\n\n    var ma = par.split(' ');\n    var mos = ma[1]; //meet;slice\n    //get dimensions of the viewport\n\n    sCTM.a = 1;\n    sCTM.d = 1;\n    sCTM.e = 0;\n    sCTM.f = 0;\n    var w = root.getAttribute('width');\n    if (w === null || w === '') w = innerWidth;\n    var h = root.getAttribute('height');\n    if (h === null || h === '') h = innerHeight; // Jeff Schiller:  Modified to account for percentages - I'm not\n    // absolutely certain this is correct but it works for 100%/100%\n\n    if (w.substr(w.length - 1, 1) === '%') {\n      w = parseFloat(w.substr(0, w.length - 1)) / 100.0 * innerWidth;\n    }\n\n    if (h.substr(h.length - 1, 1) === '%') {\n      h = parseFloat(h.substr(0, h.length - 1)) / 100.0 * innerHeight;\n    } // get the ViewBox\n\n\n    var vba = root.getAttribute('viewBox');\n    if (vba === null) vba = '0 0 ' + w + ' ' + h;\n    var vb = vba.split(' '); //get the viewBox into an array\n    //--------------------------------------------------------------------------\n    //create a matrix with current user transformation\n\n    tr.a = root.currentScale;\n    tr.d = root.currentScale;\n    tr.e = root.currentTranslate.x;\n    tr.f = root.currentTranslate.y; //scale factors\n\n    var sx = w / vb[2];\n    var sy = h / vb[3];\n    var s; //meetOrSlice\n\n    if (mos === 'slice') {\n      s = sx > sy ? sx : sy;\n    } else {\n      s = sx < sy ? sx : sy;\n    } //preserveAspectRatio=\"none\"\n\n\n    if (par === 'none') {\n      sCTM.a = sx; //scaleX\n\n      sCTM.d = sy; //scaleY\n\n      sCTM.e = -vb[0] * sx; //translateX\n\n      sCTM.f = -vb[0] * sy; //translateY\n\n      sCTM = tr.multiply(sCTM); //taking user transformations into acount\n\n      return sCTM;\n    }\n\n    sCTM.a = s; //scaleX\n\n    sCTM.d = s; //scaleY\n    //-------------------------------------------------------\n\n    switch (parX) {\n      case 'xMid':\n        sCTM.e = (w - vb[2] * s) / 2 - vb[0] * s; //translateX\n\n        break;\n\n      case 'xMin':\n        sCTM.e = -vb[0] * s; //translateX\n\n        break;\n\n      case 'xMax':\n        sCTM.e = w - vb[2] * s - vb[0] * s; //translateX\n\n        break;\n    } //------------------------------------------------------------\n\n\n    switch (parY) {\n      case 'YMid':\n        sCTM.f = (h - vb[3] * s) / 2 - vb[1] * s; //translateY\n\n        break;\n\n      case 'YMin':\n        sCTM.f = -vb[1] * s; //translateY\n\n        break;\n\n      case 'YMax':\n        sCTM.f = h - vb[3] * s - vb[1] * s; //translateY\n\n        break;\n    }\n\n    sCTM = tr.multiply(sCTM); //taking user transformations into acount\n\n    return sCTM;\n  };\n\n  _proto.contextMenu = function contextMenu(evt) {\n    //let evt= window.event;\n    if (evt.which === 3) {\n      console.log('context menu triggered', evt);\n      that.showcontextmenu = true;\n      var target = evt.currentTarget;\n      console.log('context menu current target', target);\n      document.getElementById('rankingmodal').style.display = 'block'; //get id of audio being tagged\n\n      var id = target.getElementsByTagName('title')[0].innerHTML;\n      document.getElementById('annotationtitle').innerHTML = id; //get content already stored for audio\n\n      var audiosrc = document.getElementById(id).getElementsByTagName('source')[0].getAttribute('src');\n      var content = window.ri.getAnnotation(audiosrc);\n      document.getElementById('annotationcontent').value = content ? content : \"\";\n      document.getElementById('annotationcontent').focus(); //get stored annotation info\n\n      return false;\n    }\n  };\n\n  _proto.submitAnnotation = function submitAnnotation() {\n    var content = document.getElementById('annotationcontent').value; //get audiosrc\n\n    var id = document.getElementById('annotationtitle').innerHTML;\n    var audiosrc = document.getElementById(id).getElementsByTagName('source')[0].getAttribute('src');\n    window.ri.setAnnotation(audiosrc, content);\n  };\n\n  return Ranking2dinterpreter;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///ROQc\n");

/***/ }),

/***/ "UbAQ":
/*!*******************************!*\
  !*** ./src/components/dsl.js ***!
  \*******************************/
/*! exports provided: Dsl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Dsl\", function() { return Dsl; });\nvar Dsl = /*#__PURE__*/function () {\n  function Dsl() {}\n\n  Dsl.isZvuk = function isZvuk(c) {\n    return /^[\\s]*stimulus/.test(c);\n  };\n\n  Dsl.isText = function isText(c) {\n    return /^[\\s]*text/.test(c);\n  } //    isVideo(c) { return /^[\\s]*video/.test(c); }\n  ;\n\n  Dsl.isOtazka = function isOtazka(c) {\n    return /^[\\s]*task/.test(c);\n  };\n\n  Dsl.isPanel = function isPanel(c) {\n    return /^[\\s]*panel/.test(c);\n  } //    isParvaOtazka(c) { return /^[\\s]*taskpair/.test(c); },\n  ;\n\n  Dsl.isTaskForStimuli = function isTaskForStimuli(c) {\n    return /^[\\s]*taskforstimuli/.test(c);\n  };\n\n  Dsl.startsWithZvuk = function startsWithZvuk(c) {\n    return /^[\\s]*stimulus/.test(c);\n  };\n\n  Dsl.startsWithComment = function startsWithComment(c) {\n    return /^[\\s]*#/.test(c);\n  } //isObrazovka2(c) { return /^[\\s]*dvouobrazovka/ .test(c); },\n  ;\n\n  Dsl.isKategorie = function isKategorie(c) {\n    return /^[\\s]*screen per 1/.test(c);\n  };\n\n  Dsl.isParovy = function isParovy(c) {\n    return /^[\\s]*screen per 2/.test(c);\n  };\n\n  Dsl.isObrazovka = function isObrazovka(c) {\n    return /^[\\s]*screen/.test(c);\n  };\n\n  Dsl.isSloupce = function isSloupce(c) {\n    return /^[\\s]*column/.test(c);\n  };\n\n  Dsl.isHodnoty = function isHodnoty(c) {\n    return /^[\\s]*values/.test(c);\n  };\n\n  Dsl.isCheckboxvalues = function isCheckboxvalues(c) {\n    return /^[\\s]*checkboxvalues/.test(c);\n  };\n\n  Dsl.isCheckboxvaluesOnRow = function isCheckboxvaluesOnRow(c) {\n    return /^[\\s]*checkboxvaluesonrow/.test(c);\n  } //isSkalovaci(c) { return /^[\\s]*taskscale/ .test(c); },\n  ;\n\n  Dsl.isSkalovaciHodnoty = function isSkalovaciHodnoty(c) {\n    return /^[\\s]*scalevalues/.test(c);\n  };\n\n  Dsl.isSkala = function isSkala(c) {\n    return /^[\\s]*scale/.test(c);\n  };\n\n  Dsl.isPopis = function isPopis(c) {\n    return /^[\\s]*edit/.test(c);\n  };\n\n  Dsl.isSerad2d = function isSerad2d(c) {\n    return /^[\\s]*ranking2d/.test(c);\n  };\n\n  Dsl.isPoradiVNtici = function isPoradiVNtici(c) {\n    return /^[\\s]*randomintuple/.test(c);\n  };\n\n  Dsl.isPoradiZvuku = function isPoradiZvuku(c) {\n    return /^[\\s]*randomstimuli/.test(c);\n  };\n\n  Dsl.isPoradiCase = function isPoradiCase(c) {\n    return /^[\\s]*randomscreen/.test(c);\n  };\n\n  Dsl.isRandomPairs = function isRandomPairs(c) {\n    return /^[\\s]*randompairs/.test(c);\n  };\n\n  Dsl.isValuesOnRow = function isValuesOnRow(c) {\n    return /^[\\s]*valuesonrow/.test(c);\n  };\n\n  Dsl.isSelect = function isSelect(c) {\n    return /^[\\s]*select/.test(c);\n  };\n\n  Dsl.isStyle = function isStyle(c) {\n    return /^[\\s]*#style/.test(c);\n  };\n\n  Dsl.isStyleButton = function isStyleButton(c) {\n    return /^[\\s]*#stylebutton/.test(c);\n  };\n\n  Dsl.isStyleForm = function isStyleForm(c) {\n    return /^[\\s]*#styleform/.test(c);\n  };\n\n  Dsl.isType = function isType(c) {\n    return /^[\\s]*type /.test(c);\n  };\n\n  Dsl.isExtends = function isExtends(c) {\n    return /^[\\s]*extends /.test(c);\n  };\n\n  Dsl.isStimuliGroup = function isStimuliGroup(c) {\n    return /^[\\s]*stimuligroup /.test(c);\n  };\n\n  Dsl.isWithStimuli = function isWithStimuli(c) {\n    return /^[\\s]*withstimuli/.test(c);\n  };\n\n  Dsl.isWithStimuligroup = function isWithStimuligroup(c) {\n    return /^[\\s]*withgroup/.test(c);\n  };\n\n  Dsl.stimuliType = function stimuliType(c) {\n    return /\\(([^)]+)\\)/.exec(c);\n  };\n\n  return Dsl;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVWJBUS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2RzbC5qcz81MWIwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEc2wge1xuICBzdGF0aWMgaXNadnVrKGMpIHsgcmV0dXJuIC9eW1xcc10qc3RpbXVsdXMvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzVGV4dChjKSB7IHJldHVybiAvXltcXHNdKnRleHQvLnRlc3QoYyk7IH1cbiAgLy8gICAgaXNWaWRlbyhjKSB7IHJldHVybiAvXltcXHNdKnZpZGVvLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc090YXprYShjKSB7IHJldHVybiAvXltcXHNdKnRhc2svLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzUGFuZWwoYykgeyByZXR1cm4gL15bXFxzXSpwYW5lbC8udGVzdChjKTsgfVxuICAvLyAgICBpc1BhcnZhT3RhemthKGMpIHsgcmV0dXJuIC9eW1xcc10qdGFza3BhaXIvLnRlc3QoYyk7IH0sXG4gIHN0YXRpYyBpc1Rhc2tGb3JTdGltdWxpKGMpIHsgcmV0dXJuIC9eW1xcc10qdGFza2ZvcnN0aW11bGkvLnRlc3QoYyk7IH1cbiAgc3RhdGljIHN0YXJ0c1dpdGhadnVrKGMpIHsgcmV0dXJuIC9eW1xcc10qc3RpbXVsdXMvLnRlc3QoYyk7IH1cbiAgc3RhdGljIHN0YXJ0c1dpdGhDb21tZW50KGMpIHsgcmV0dXJuIC9eW1xcc10qIy8udGVzdChjKTsgfVxuICAvL2lzT2JyYXpvdmthMihjKSB7IHJldHVybiAvXltcXHNdKmR2b3VvYnJhem92a2EvIC50ZXN0KGMpOyB9LFxuICBzdGF0aWMgaXNLYXRlZ29yaWUoYykgeyByZXR1cm4gL15bXFxzXSpzY3JlZW4gcGVyIDEvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzUGFyb3Z5KGMpIHsgcmV0dXJuIC9eW1xcc10qc2NyZWVuIHBlciAyLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc09icmF6b3ZrYShjKSB7IHJldHVybiAvXltcXHNdKnNjcmVlbi8udGVzdChjKTsgfVxuICBzdGF0aWMgaXNTbG91cGNlKGMpIHsgcmV0dXJuIC9eW1xcc10qY29sdW1uLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc0hvZG5vdHkoYykgeyByZXR1cm4gL15bXFxzXSp2YWx1ZXMvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzQ2hlY2tib3h2YWx1ZXMoYykgeyByZXR1cm4gL15bXFxzXSpjaGVja2JveHZhbHVlcy8udGVzdChjKTsgfVxuICBzdGF0aWMgaXNDaGVja2JveHZhbHVlc09uUm93KGMpIHsgcmV0dXJuIC9eW1xcc10qY2hlY2tib3h2YWx1ZXNvbnJvdy8udGVzdChjKTsgfVxuICAvL2lzU2thbG92YWNpKGMpIHsgcmV0dXJuIC9eW1xcc10qdGFza3NjYWxlLyAudGVzdChjKTsgfSxcbiAgc3RhdGljIGlzU2thbG92YWNpSG9kbm90eShjKSB7IHJldHVybiAvXltcXHNdKnNjYWxldmFsdWVzLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc1NrYWxhKGMpIHsgcmV0dXJuIC9eW1xcc10qc2NhbGUvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzUG9waXMoYykgeyByZXR1cm4gL15bXFxzXSplZGl0Ly50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc1NlcmFkMmQoYykgeyByZXR1cm4gL15bXFxzXSpyYW5raW5nMmQvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzUG9yYWRpVk50aWNpKGMpIHsgcmV0dXJuIC9eW1xcc10qcmFuZG9taW50dXBsZS8udGVzdChjKTsgfVxuICBzdGF0aWMgaXNQb3JhZGladnVrdShjKSB7IHJldHVybiAvXltcXHNdKnJhbmRvbXN0aW11bGkvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzUG9yYWRpQ2FzZShjKSB7IHJldHVybiAvXltcXHNdKnJhbmRvbXNjcmVlbi8udGVzdChjKTsgfVxuICBzdGF0aWMgaXNSYW5kb21QYWlycyhjKSB7IHJldHVybiAvXltcXHNdKnJhbmRvbXBhaXJzLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc1ZhbHVlc09uUm93KGMpIHsgcmV0dXJuIC9eW1xcc10qdmFsdWVzb25yb3cvLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzU2VsZWN0KGMpIHsgcmV0dXJuIC9eW1xcc10qc2VsZWN0Ly50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc1N0eWxlKGMpIHsgcmV0dXJuIC9eW1xcc10qI3N0eWxlLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc1N0eWxlQnV0dG9uKGMpIHsgcmV0dXJuIC9eW1xcc10qI3N0eWxlYnV0dG9uLy50ZXN0KGMpOyB9XG4gIHN0YXRpYyBpc1N0eWxlRm9ybShjKSB7IHJldHVybiAvXltcXHNdKiNzdHlsZWZvcm0vLnRlc3QoYyk7IH1cbiAgc3RhdGljIGlzVHlwZShjKSB7IHJldHVybiAvXltcXHNdKnR5cGUgLy50ZXN0KGMpO31cbiAgc3RhdGljIGlzRXh0ZW5kcyhjKSB7cmV0dXJuIC9eW1xcc10qZXh0ZW5kcyAvLnRlc3QoYyk7fVxuICBzdGF0aWMgaXNTdGltdWxpR3JvdXAoYykge3JldHVybiAvXltcXHNdKnN0aW11bGlncm91cCAvLnRlc3QoYyk7fVxuICBzdGF0aWMgaXNXaXRoU3RpbXVsaShjKSB7cmV0dXJuIC9eW1xcc10qd2l0aHN0aW11bGkvLnRlc3QoYyk7fVxuICBzdGF0aWMgaXNXaXRoU3RpbXVsaWdyb3VwKGMpIHtyZXR1cm4gL15bXFxzXSp3aXRoZ3JvdXAvLnRlc3QoYyk7fVxuICBzdGF0aWMgc3RpbXVsaVR5cGUoYykge3JldHVybiAvXFwoKFteKV0rKVxcKS8uZXhlYyhjKTt9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFEQTtBQUNBO0FBQUE7QUFDQTtBQUZBO0FBRUE7QUFBQTtBQUZBO0FBQ0E7QUFEQTtBQUlBO0FBQUE7QUFDQTtBQUxBO0FBS0E7QUFBQTtBQUxBO0FBQ0E7QUFEQTtBQU9BO0FBQUE7QUFDQTtBQVJBO0FBUUE7QUFBQTtBQUNBO0FBVEE7QUFTQTtBQUFBO0FBVEE7QUFDQTtBQURBO0FBV0E7QUFBQTtBQUNBO0FBWkE7QUFZQTtBQUFBO0FBQ0E7QUFiQTtBQWFBO0FBQUE7QUFDQTtBQWRBO0FBY0E7QUFBQTtBQUNBO0FBZkE7QUFlQTtBQUFBO0FBQ0E7QUFoQkE7QUFnQkE7QUFBQTtBQUNBO0FBakJBO0FBaUJBO0FBQUE7QUFqQkE7QUFDQTtBQURBO0FBbUJBO0FBQUE7QUFDQTtBQXBCQTtBQW9CQTtBQUFBO0FBQ0E7QUFyQkE7QUFxQkE7QUFBQTtBQUNBO0FBdEJBO0FBc0JBO0FBQUE7QUFDQTtBQXZCQTtBQXVCQTtBQUFBO0FBQ0E7QUF4QkE7QUF3QkE7QUFBQTtBQUNBO0FBekJBO0FBeUJBO0FBQUE7QUFDQTtBQTFCQTtBQTBCQTtBQUFBO0FBQ0E7QUEzQkE7QUEyQkE7QUFBQTtBQUNBO0FBNUJBO0FBNEJBO0FBQUE7QUFDQTtBQTdCQTtBQTZCQTtBQUFBO0FBQ0E7QUE5QkE7QUE4QkE7QUFBQTtBQUNBO0FBL0JBO0FBK0JBO0FBQUE7QUFDQTtBQWhDQTtBQWdDQTtBQUFBO0FBQ0E7QUFqQ0E7QUFpQ0E7QUFBQTtBQUNBO0FBbENBO0FBa0NBO0FBQUE7QUFDQTtBQW5DQTtBQW1DQTtBQUFBO0FBQ0E7QUFwQ0E7QUFvQ0E7QUFBQTtBQUNBO0FBckNBO0FBcUNBO0FBQUE7QUFDQTtBQXRDQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///UbAQ\n");

/***/ }),

/***/ "YWhn":
/*!***********************************************!*\
  !*** ./src/components/responseinterpreter.js ***!
  \***********************************************/
/*! exports provided: Responseinterpreter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Responseinterpreter\", function() { return Responseinterpreter; });\n//var ri;\nvar Responseinterpreter = /*#__PURE__*/function () {\n  /**\n   * Created by tomaton on 10/21/2015.\n   */\n  function Responseinterpreter(parent) {\n    this.answers = [];\n    this.lastotazka = '';\n    this.lastqcase = '';\n    this.parser = parent;\n  }\n\n  var _proto = Responseinterpreter.prototype;\n\n  _proto.resetLast = function resetLast() {\n    this.lastqcase = '';\n    this.lastotazka = '';\n  };\n\n  _proto.addCase = function addCase(qcase) {\n    this.lastqcase += qcase;\n  };\n\n  _proto.setFullAnswer = function setFullAnswer(pageNum, questionNum, qcase, question, answer) {\n    //test if exists\n    //console.log(\"setanswer \" + pageNum + \" \" + questionNum+\" \"+qcase+\" \"+question+\":\", answer);\n    if (!this.answers[pageNum - 1]) this.answers[pageNum - 1] = []; //some workaround probably not needed more\n\n    if (!this.answers[pageNum - 1][questionNum - 1]) this.answers[pageNum - 1][questionNum - 1] = {};\n    this.answers[pageNum - 1][questionNum - 1].case = qcase;\n    this.answers[pageNum - 1][questionNum - 1].question = question;\n    this.setAnswer(pageNum, questionNum, answer);\n  } //sets default answer\n\n  /*Responses.prototype.setDefaultAnswer = function (pageNum, questionNum) {\n      return this.setDefaultAnswer(pageNum,questionNum,\"\");\n      // if (!this.answers[pageNum - 1] || !this.answers[pageNum - 1][questionNum - 1]) this.setFullAnswer(pageNum, questionNum, this.lastqcase,this.lastotazka,\"N/A\");\n  };\n   //sets default answer\n  Responses.prototype.setDefaultOptionalAnswer = function(pageNum, questionNum) {\n      return setDetaultOptionalAnswer(pageNum,questionNum,\"\");\n      //    if (!this.answers[pageNum - 1] || !this.answers[pageNum - 1][questionNum - 1]) this.setFullAnswer(pageNum, questionNum, this.lastqcase, this.lastotazka, \"\");\n  };*/\n  //sets default answer\n  ;\n\n  _proto.setDefaultAnswer = function setDefaultAnswer(pageNum, questionNum, suffix) {\n    var mysuffix = '';\n    if (suffix) mysuffix = suffix;\n    if (!this.answers[pageNum - 1] || !this.answers[pageNum - 1][questionNum - 1]) this.setFullAnswer(pageNum, questionNum, this.lastqcase, this.lastotazka + mysuffix, 'N/A');\n  } //sets default answer\n  ;\n\n  _proto.setDefaultOptionalAnswer = function setDefaultOptionalAnswer(pageNum, questionNum, suffix) {\n    var mysuffix = '';\n    if (suffix) mysuffix = suffix;\n    if (!this.answers[pageNum - 1] || !this.answers[pageNum - 1][questionNum - 1]) this.setFullAnswer(pageNum, questionNum, this.lastqcase, this.lastotazka + mysuffix, '');\n  }\n  /* executable function, can be called from html element*/\n  ;\n\n  _proto.setAnswer = function setAnswer(pageNum, questionNum, answer) {\n    if (answer.value) this.parser.result.answers[pageNum - 1][questionNum - 1].answer = answer.value;else this.parser.result.answers[pageNum - 1][questionNum - 1].answer = answer;\n    this.parser.result.answers[pageNum - 1][questionNum - 1].date = new Date();\n  };\n\n  _proto.setAnnotation = function setAnnotation(audiosrc, value) {\n    //create default empty annotation structure if it doesn't exist for audioid\n    if (!this.parser.result.answers[audiosrc]) this.parser.result.answers[audiosrc] = {};\n    this.parser.result.answers[audiosrc].annotation = value;\n    console.log('setannotation', audiosrc, value);\n  };\n\n  _proto.getAnnotation = function getAnnotation(audiosrc) {\n    //create default empty annotation structure if it doesn't exist for audioid\n    console.log('getannotation', audiosrc, this.parser.result.answers[audiosrc]);\n    if (this.parser.result.answers[audiosrc]) return this.parser.result.answers[audiosrc].annotation;else return false;\n  };\n\n  _proto.setCheckAnswer = function setCheckAnswer(pageNum, questionNum, answer) {\n    if (answer.value) {\n      if (!this.parser.result.answers[pageNum - 1][questionNum - 1].hasOwnProperty('checkedvalues')) this.parser.result.answers[pageNum - 1][questionNum - 1].checkedvalues = [];\n      if (answer.checked) this.parser.result.answers[pageNum - 1][questionNum - 1].checkedvalues[answer.value] = answer.value;else if (this.parser.result.answers[pageNum - 1][questionNum - 1].checkedvalues.hasOwnProperty(answer.value)) delete this.parser.result.answers[pageNum - 1][questionNum - 1].checkedvalues[answer.value];\n      var currentanswer = '';\n      this.parser.result.answers[pageNum - 1][questionNum - 1].checkedvalues.forEach(function (item) {\n        if (this.parser.result.answers[pageNum - 1][questionNum - 1].checkedvalues[item]) currentanswer += item + ';';\n      }, this); //this is propagated to foreach callback\n\n      this.parser.result.answers[pageNum - 1][questionNum - 1].answer = currentanswer;\n    } //    else answers[pageNum - 1][questionNum - 1].answer = answer;\n\n\n    this.parser.result.answers[pageNum - 1][questionNum - 1].date = new Date();\n  };\n\n  return Responseinterpreter;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWVdobi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3Jlc3BvbnNlaW50ZXJwcmV0ZXIuanM/NjE2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvL3ZhciByaTtcblxuZXhwb3J0IGNsYXNzIFJlc3BvbnNlaW50ZXJwcmV0ZXIge1xuICAvKipcbiAgICogQ3JlYXRlZCBieSB0b21hdG9uIG9uIDEwLzIxLzIwMTUuXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKHBhcmVudCkge1xuICAgIHRoaXMuYW5zd2VycyA9IFtdO1xuICAgIHRoaXMubGFzdG90YXprYSA9ICcnO1xuICAgIHRoaXMubGFzdHFjYXNlID0gJyc7XG4gICAgdGhpcy5wYXJzZXIgPSBwYXJlbnQ7XG4gIH1cblxuICByZXNldExhc3QoKSB7XG4gICAgdGhpcy5sYXN0cWNhc2UgPSAnJztcbiAgICB0aGlzLmxhc3RvdGF6a2EgPSAnJztcbiAgfVxuXG4gIGFkZENhc2UocWNhc2UpIHtcbiAgICB0aGlzLmxhc3RxY2FzZSArPSBxY2FzZTtcbiAgfVxuXG4gIHNldEZ1bGxBbnN3ZXIocGFnZU51bSwgcXVlc3Rpb25OdW0sIHFjYXNlLCBxdWVzdGlvbiwgYW5zd2VyKSB7XG4gICAgLy90ZXN0IGlmIGV4aXN0c1xuICAgIC8vY29uc29sZS5sb2coXCJzZXRhbnN3ZXIgXCIgKyBwYWdlTnVtICsgXCIgXCIgKyBxdWVzdGlvbk51bStcIiBcIitxY2FzZStcIiBcIitxdWVzdGlvbitcIjpcIiwgYW5zd2VyKTtcbiAgICBpZiAoIXRoaXMuYW5zd2Vyc1twYWdlTnVtIC0gMV0pIHRoaXMuYW5zd2Vyc1twYWdlTnVtIC0gMV0gPSBbXTsgLy9zb21lIHdvcmthcm91bmQgcHJvYmFibHkgbm90IG5lZWRlZCBtb3JlXG4gICAgaWYgKCF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdW3F1ZXN0aW9uTnVtIC0gMV0pIHRoaXMuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXSA9IHt9O1xuICAgIHRoaXMuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXS5jYXNlID0gcWNhc2U7XG4gICAgdGhpcy5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLnF1ZXN0aW9uID0gcXVlc3Rpb247XG4gICAgdGhpcy5zZXRBbnN3ZXIocGFnZU51bSwgcXVlc3Rpb25OdW0sIGFuc3dlcik7XG4gIH1cblxuXG4gIC8vc2V0cyBkZWZhdWx0IGFuc3dlclxuICAvKlJlc3BvbnNlcy5wcm90b3R5cGUuc2V0RGVmYXVsdEFuc3dlciA9IGZ1bmN0aW9uIChwYWdlTnVtLCBxdWVzdGlvbk51bSkge1xuICAgICAgcmV0dXJuIHRoaXMuc2V0RGVmYXVsdEFuc3dlcihwYWdlTnVtLHF1ZXN0aW9uTnVtLFwiXCIpO1xuICAgICAgLy8gaWYgKCF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdIHx8ICF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdW3F1ZXN0aW9uTnVtIC0gMV0pIHRoaXMuc2V0RnVsbEFuc3dlcihwYWdlTnVtLCBxdWVzdGlvbk51bSwgdGhpcy5sYXN0cWNhc2UsdGhpcy5sYXN0b3RhemthLFwiTi9BXCIpO1xuICB9O1xuXG4gIC8vc2V0cyBkZWZhdWx0IGFuc3dlclxuICBSZXNwb25zZXMucHJvdG90eXBlLnNldERlZmF1bHRPcHRpb25hbEFuc3dlciA9IGZ1bmN0aW9uKHBhZ2VOdW0sIHF1ZXN0aW9uTnVtKSB7XG4gICAgICByZXR1cm4gc2V0RGV0YXVsdE9wdGlvbmFsQW5zd2VyKHBhZ2VOdW0scXVlc3Rpb25OdW0sXCJcIik7XG4gICAgICAvLyAgICBpZiAoIXRoaXMuYW5zd2Vyc1twYWdlTnVtIC0gMV0gfHwgIXRoaXMuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXSkgdGhpcy5zZXRGdWxsQW5zd2VyKHBhZ2VOdW0sIHF1ZXN0aW9uTnVtLCB0aGlzLmxhc3RxY2FzZSwgdGhpcy5sYXN0b3RhemthLCBcIlwiKTtcbiAgfTsqL1xuXG4gIC8vc2V0cyBkZWZhdWx0IGFuc3dlclxuICBzZXREZWZhdWx0QW5zd2VyKHBhZ2VOdW0sIHF1ZXN0aW9uTnVtLCBzdWZmaXgpIHtcbiAgICBsZXQgbXlzdWZmaXggPSAnJzsgICAgaWYgKHN1ZmZpeCkgbXlzdWZmaXggPSBzdWZmaXg7XG4gICAgaWYgKCF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdIHx8ICF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdW3F1ZXN0aW9uTnVtIC0gMV0pIHRoaXMuc2V0RnVsbEFuc3dlcihwYWdlTnVtLCBxdWVzdGlvbk51bSwgdGhpcy5sYXN0cWNhc2UsIHRoaXMubGFzdG90YXprYSArIG15c3VmZml4LCAnTi9BJyk7XG4gIH1cblxuICAvL3NldHMgZGVmYXVsdCBhbnN3ZXJcbiAgc2V0RGVmYXVsdE9wdGlvbmFsQW5zd2VyKHBhZ2VOdW0sIHF1ZXN0aW9uTnVtLCBzdWZmaXgpIHtcbiAgICBsZXQgbXlzdWZmaXggPSAnJzsgICAgaWYgKHN1ZmZpeCkgbXlzdWZmaXggPSBzdWZmaXg7XG4gICAgaWYgKCF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdIHx8ICF0aGlzLmFuc3dlcnNbcGFnZU51bSAtIDFdW3F1ZXN0aW9uTnVtIC0gMV0pIHRoaXMuc2V0RnVsbEFuc3dlcihwYWdlTnVtLCBxdWVzdGlvbk51bSwgdGhpcy5sYXN0cWNhc2UsIHRoaXMubGFzdG90YXprYSArIG15c3VmZml4LCAnJyk7XG4gIH1cblxuXG4gIC8qIGV4ZWN1dGFibGUgZnVuY3Rpb24sIGNhbiBiZSBjYWxsZWQgZnJvbSBodG1sIGVsZW1lbnQqL1xuICBzZXRBbnN3ZXIocGFnZU51bSwgcXVlc3Rpb25OdW0sIGFuc3dlcikge1xuICAgIGlmIChhbnN3ZXIudmFsdWUpIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLmFuc3dlciA9IGFuc3dlci52YWx1ZTtcbiAgICBlbHNlIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLmFuc3dlciA9IGFuc3dlcjtcbiAgICB0aGlzLnBhcnNlci5yZXN1bHQuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXS5kYXRlID0gbmV3IERhdGUoKTtcbiAgfVxuXG4gIHNldEFubm90YXRpb24oYXVkaW9zcmMsdmFsdWUpe1xuICAgIC8vY3JlYXRlIGRlZmF1bHQgZW1wdHkgYW5ub3RhdGlvbiBzdHJ1Y3R1cmUgaWYgaXQgZG9lc24ndCBleGlzdCBmb3IgYXVkaW9pZFxuICAgIGlmICghIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW2F1ZGlvc3JjXSkgIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW2F1ZGlvc3JjXT0ge307XG4gICAgdGhpcy5wYXJzZXIucmVzdWx0LmFuc3dlcnNbYXVkaW9zcmNdLmFubm90YXRpb249dmFsdWU7XG4gICAgY29uc29sZS5sb2coJ3NldGFubm90YXRpb24nLGF1ZGlvc3JjLHZhbHVlKVxuICB9XG5cbiAgZ2V0QW5ub3RhdGlvbihhdWRpb3NyYyl7XG4gICAgLy9jcmVhdGUgZGVmYXVsdCBlbXB0eSBhbm5vdGF0aW9uIHN0cnVjdHVyZSBpZiBpdCBkb2Vzbid0IGV4aXN0IGZvciBhdWRpb2lkXG4gICAgY29uc29sZS5sb2coJ2dldGFubm90YXRpb24nLGF1ZGlvc3JjLHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW2F1ZGlvc3JjXSlcbiAgICBpZiAodGhpcy5wYXJzZXIucmVzdWx0LmFuc3dlcnNbYXVkaW9zcmNdKSByZXR1cm4gdGhpcy5wYXJzZXIucmVzdWx0LmFuc3dlcnNbYXVkaW9zcmNdLmFubm90YXRpb247XG4gICAgZWxzZSByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzZXRDaGVja0Fuc3dlcihwYWdlTnVtLCBxdWVzdGlvbk51bSwgYW5zd2VyKSB7XG4gICAgaWYgKGFuc3dlci52YWx1ZSkge1xuICAgICAgaWYgKCF0aGlzLnBhcnNlci5yZXN1bHQuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXS5oYXNPd25Qcm9wZXJ0eSgnY2hlY2tlZHZhbHVlcycpKSB0aGlzLnBhcnNlci5yZXN1bHQuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXS5jaGVja2VkdmFsdWVzID0gW107XG4gICAgICBpZiAoYW5zd2VyLmNoZWNrZWQpIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLmNoZWNrZWR2YWx1ZXNbYW5zd2VyLnZhbHVlXSA9IGFuc3dlci52YWx1ZTtcbiAgICAgIGVsc2UgaWYgKHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLmNoZWNrZWR2YWx1ZXMuaGFzT3duUHJvcGVydHkoYW5zd2VyLnZhbHVlKSkgZGVsZXRlIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLmNoZWNrZWR2YWx1ZXNbYW5zd2VyLnZhbHVlXTtcbiAgICAgIGxldCBjdXJyZW50YW5zd2VyID0gJyc7XG4gICAgICB0aGlzLnBhcnNlci5yZXN1bHQuYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXS5jaGVja2VkdmFsdWVzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICBpZiAodGhpcy5wYXJzZXIucmVzdWx0LmFuc3dlcnNbcGFnZU51bSAtIDFdW3F1ZXN0aW9uTnVtIC0gMV0uY2hlY2tlZHZhbHVlc1tpdGVtXSkgY3VycmVudGFuc3dlciArPSBpdGVtICsgJzsnO1xuICAgICAgfSwgdGhpcyk7IC8vdGhpcyBpcyBwcm9wYWdhdGVkIHRvIGZvcmVhY2ggY2FsbGJhY2tcbiAgICAgIHRoaXMucGFyc2VyLnJlc3VsdC5hbnN3ZXJzW3BhZ2VOdW0gLSAxXVtxdWVzdGlvbk51bSAtIDFdLmFuc3dlciA9IGN1cnJlbnRhbnN3ZXI7XG4gICAgfVxuICAgIC8vICAgIGVsc2UgYW5zd2Vyc1twYWdlTnVtIC0gMV1bcXVlc3Rpb25OdW0gLSAxXS5hbnN3ZXIgPSBhbnN3ZXI7XG4gICAgdGhpcy5wYXJzZXIucmVzdWx0LmFuc3dlcnNbcGFnZU51bSAtIDFdW3F1ZXN0aW9uTnVtIC0gMV0uZGF0ZSA9IG5ldyBEYXRlKCk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFYQTtBQUNBO0FBREE7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQWhCQTtBQWtCQTtBQUNBO0FBQ0E7QUFwQkE7QUFzQkE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTs7Ozs7Ozs7O0FBV0E7QUE1Q0E7QUFDQTtBQURBO0FBOENBO0FBQUE7QUFDQTtBQUNBO0FBaERBO0FBQ0E7QUFEQTtBQW9EQTtBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBekRBO0FBQ0E7QUFEQTtBQTJEQTtBQUVBO0FBQ0E7QUFDQTtBQS9EQTtBQWlFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0RUE7QUF3RUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQTdFQTtBQStFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUE1RkE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///YWhn\n");

/***/ }),

/***/ "YqAC":
/*!***********************************************!*\
  !*** ./src/components/stimulusinterpreter.js ***!
  \***********************************************/
/*! exports provided: Stimulusinterpreter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stimulusinterpreter\", function() { return Stimulusinterpreter; });\n/* harmony import */ var _interpreter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interpreter */ \"3QiX\");\n/* harmony import */ var _dsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dsl */ \"UbAQ\");\n/* harmony import */ var peaks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! peaks.js */ \"odNm\");\n/* harmony import */ var peaks_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(peaks_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar Stimulusinterpreter = /*#__PURE__*/function () {\n  /**\n   * Created by tomaton on 10/21/2015.\n   */\n  //main object\n  function Stimulusinterpreter(parent) {\n    this.navelement = false;\n    this.divelement = false;\n    this.audioid = 0;\n    this.SOUNDDIR = 'stimuli/';\n    this.parentinterpretter = parent; //this.sloupce = false;\n  }\n\n  var _proto = Stimulusinterpreter.prototype;\n\n  _proto.initPeaks = function initPeaks(id) {\n    //TODO this may not work -wave audi needs to be pregenerated\n    this.peakhtml = '<div id=\"peakscontainer\">\\n' + '  <div id=\"zoomviewcontainer' + id + '\"></div>\\n' + '  <div id=\"overviewcontainer' + id + '\"></div>\\n' + '</div><script>' + \"\\n     const options = {\\n      containers: {\\n        overview: document.getElementById('overviewcontainer'+id),\\n        zoomview: document.getElementById('zoomviewcontainer'+id)\\n      }};\\n     Peaks.init(options, function(err, peaks) {         });\\n  </script>\";\n  }\n  /* separates non-stimulus part of test */\n  ;\n\n  _proto.translateNonZvuk = function translateNonZvuk(row) {\n    if (this.navelement) {\n      this.navelement = false;\n      this.divelement = true;\n      return \"</nav><div class='task' id='questions'>\\n\";\n    }\n\n    if (!this.divelement) {\n      this.divelement = true;\n      return \"<div class='task' id='questions'>\\n\";\n    }\n\n    return '';\n  }\n  /* close unclosed <div>*/\n  ;\n\n  _proto.closeQuestionDiv = function closeQuestionDiv() {\n    if (this.divelement) {\n      this.divelement = false;\n      return \"<p class='footer'></p></div>\";\n    }\n\n    return '';\n  }\n  /* same name different extension => <audio> with different sources, different names => different <audios>\n   * translates \"zvuk [filename2.wav] [filename2.ogg]\" to HTML representation of sound player to one or both formats wav, ogg\n   * translates \"zvuk [file1.wav] [file1.ogg] [file2.wav] [file3.wav] into tuple of buttons file1 has 2 sources with ogg and wav, file2 and file3 has one source with wav\n   */\n  ;\n\n  _proto.openAudio = function openAudio(sloupce, sounddef) {\n    if (!sloupce && !this.navelement) {\n      this.navelement = true;\n\n      switch (this.tagtype) {\n        case 'mp4':\n          this.tags.push(\"<nav class='stimulus videos'>\"); //video takes more space\n\n          break;\n\n        case 'png':\n        case 'jpg':\n          this.tags.push(\"<nav class='stimulus pictures'>\"); //image takes variable space\n\n          break;\n\n        case 'txt':\n          this.tags.push(\"<nav class='stimulus txts'>\"); //text takes more space\n\n          break;\n\n        default:\n          this.tags.push(\"<nav class='stimulus sounds'>\");\n        //audio on left 10 % column\n      }\n    }\n\n    switch (this.tagtype) {\n      case 'mp4':\n        this.currentTag.push(\"<video style='max-width:100%;' id='video\" + this.audioid++ + \"' width='480' height='360' controls>\");\n        break;\n\n      case 'png':\n      case 'jpg':\n        this.currentTag.push(\"<img style='width:100%;' id='image\" + this.audioid++ + \"'\"); //imageo takes more space\n\n        break;\n\n      case 'txt':\n        this.currentTag.push(\"<p id='text\" + this.audioid++ + \"'>\"); //text takes more space\n\n        break;\n\n      default:\n        this.inputindex = this.currentTag.length;\n        var soundtype = _dsl__WEBPACK_IMPORTED_MODULE_1__[\"Dsl\"].stimuliType(sounddef);\n\n        if (soundtype) {\n          if (soundtype[1] === 'button') this.currentTag.push(\"<input class='sound-button' type='button' onclick='document.getElementById(\\\"audio\" + this.audioid + \"\\\").play();' value='play'/> <audio id='audio\" + this.audioid++ + \"'>\");else if (soundtype[1] === 'controls') this.currentTag.push(\"<audio controls id='audio\" + this.audioid++ + \"'> \");else if (soundtype[1] === 'waveform') {\n            this.initPeaks(this.audioid);\n            this.currentTag.push(this.peakhtml + \"<audio controls id='audio\" + this.audioid++ + \"'> \");\n          }\n        } else {\n          this.currentTag.push(\"<input class='sound-button' type='button' onclick='document.getElementById(\\\"audio\" + this.audioid + \"\\\").play();' value='play'/> <audio id='audio\" + this.audioid++ + \"'>\");\n        }\n\n        break;\n    }\n  } //add range playing of sound\n  ;\n\n  _proto.repairLastAudio = function repairLastAudio(rowsplitted) {\n    //preserve that\n    switch (this.tagtype) {\n      case 'mp4':\n      case 'png':\n      case 'jpg':\n      case 'txt':\n        console.log('Error, expected audio for range playing');\n        break;\n\n      default:\n        var re2 = /[\\[\\],]/; // fix feature bug #240, coma ',' is used to separate interval numbers\n\n        var rowsplitted2 = rowsplitted.split(re2);\n        var starttime = rowsplitted2[1]; //[10,10] is separates as [0] is empty, [1] is 10, [2] is 10 [3] is empty\n\n        var duration = rowsplitted2[2];\n        this.audioid--; //will repair the last audio\n\n        this.currentTag[this.inputindex] = \"<input type='button' onclick='playAudioPart(document.getElementById(\\\"audio\" + this.audioid + '\"),' + starttime + ',' + duration + \");' value='play'/><audio id='audio\" + this.audioid++ + \"'>\";\n    }\n  } //close <audio> tag\n  ;\n\n  _proto.closeAudio = function closeAudio() {\n    switch (this.tagtype) {\n      case 'mp4':\n        this.currentTag.push('Your browser does not support the video element.</video>\\n');\n        break;\n\n      case 'png':\n      case 'jpg':\n        this.currentTag.push('/>');\n        break;\n\n      case 'txt':\n        this.currentTag.push('</p>');\n        break;\n\n      default:\n        this.currentTag.push('Your browser does not support the audio element.</audio>\\n');\n    } //adds copy of current tag to the array of tags dedicated to unique stimulus\n\n\n    this.tags.push(this.currentTag.join('')); //nulls the current tag so new content audio/video can be inserted\n\n    this.currentTag = [];\n  } //add <source> of the <audio> <video and src of the image\n  ;\n\n  _proto.addSource = function addSource() {\n    switch (this.tagtype) {\n      case 'mp4':\n        this.currentTag.push(\"<source src='\" + this.SOUNDDIR + this.currentsound[0] + '.' + this.currentsound[1] + \"' type='audio/\"); //+rowsplitted[j+1]+\"'>';\n\n        this.currentTag.push(\"mpeg'>\");\n        break;\n\n      case 'png':\n      case 'jpg':\n        this.currentTag.push(\" src='\" + this.SOUNDDIR + this.currentsound[0] + '.' + this.currentsound[1] + \"'\");\n        break;\n\n      case 'txt':\n        //loads the content of the txt file\n        this.currentTag.push(\"<span src='\" + this.SOUNDDIR + this.currentsound[0] + '.' + this.currentsound[1] + \"'/>\"); //to hold the source\n\n        this.currentTag.push(\"</p><script>$('#text\" + (this.audioid - 1) + \"').load('\" + this.SOUNDDIR + this.currentsound[0] + '.' + this.currentsound[1] + \"')</script>\");\n        break;\n\n      default:\n        this.currentTag.push(\"<source src='\" + this.SOUNDDIR + this.currentsound[0] + '.' + this.currentsound[1] + \"' type='audio/\"); //+rowsplitted[j+1]+\"'>';\n\n        this.currentTag.push(this.currentsound[1] + \"'>\");\n    }\n\n    this.lastsoundname = this.currentsound[0];\n  }\n  /*\n  Stimulus.prototype.firstscreenaudioid= function()\n  {\n  //    this.audioid = 0\n  //    this.firstscreenaudioid = this.audioid;\n  }\n  */\n  ;\n\n  _proto.translateZvuk = function translateZvuk(rowsplitted, poradivnticinahodne, result, sloupce) {\n    var j = 1;\n    this.lastsoundname = '';\n    this.tagtype = rowsplitted[j].slice(rowsplitted[j].length - 3, rowsplitted[j].length).toLowerCase(); // || rowsplitted[j].startsWith('v_');\n\n    this.tags = [];\n    this.currentTag = [];\n    this.currentsound = [];\n    this.inputindex = 0; //sloupce - used ofr pair test\n\n    if (sloupce) this.currentTag.push(\"<td class='stimulus'>\");\n    /* open initial tag */\n\n    this.openAudio(sloupce, rowsplitted[0]);\n\n    while (j < rowsplitted.length) {\n      this.currentsound = rowsplitted[j].split('.'); //if (!quotes)\n\n      if (this.lastsoundname === '' || this.lastsoundname === this.currentsound[0]) {\n        //add only new source type (wav,ogg), if soundname is same and only extension differs\n        this.addSource();\n        j++;\n      } else if (rowsplitted[j].startsWith('[')) {\n        //interval of previous sound\n        this.repairLastAudio(rowsplitted[j]);\n        j++; //skip the interval in [..]\n      } else {\n        //add new audio, different sound and it's source if different name\n        this.closeAudio();\n        this.openAudio(sloupce, rowsplitted[0]);\n        this.addSource();\n        j++;\n      } //bug in feature #235, must randomize also the case order\n      //lastqcase += rowsplitted[j] + \".\" + rowsplitted[j + 1] + \" \"; //adds sound to qcase structure\n\n    }\n    /* close last tag*/\n\n\n    this.closeAudio();\n    /* shuffle if needed */\n\n    if (poradivnticinahodne) {\n      //keep first <nav>,\n      var mytag = this.tags.shift(); //shuffle\n\n      this.tags.shuffle(); //adds first <nav>\n\n      this.tags.unshift(mytag);\n    } //gets filenames from the tags to keep order of cases in result, fix of feature #235, for starts from 1, 0 is <nav>, if sloupce then starts from 0 (no <nav> element\n    //added sloupce?0:1 and parser.result.addCase() fix bug #284\n\n\n    for (var k = sloupce ? 0 : 1; k < this.tags.length; k++) {\n      this.parentinterpretter.result.addCase(_interpreter__WEBPACK_IMPORTED_MODULE_0__[\"Interpreter\"].extract(this.tags[k].match(/src='([^']*)'/)[1], this.SOUNDDIR) + ' ');\n    } //translatedRows = tags.join\n\n\n    return this.tags.join(' ');\n  }\n  /* executive part of the audio\n   playing part of the audio,\n   audio element is expected as the calling argument,\n   e.g. document.getElementById('myAudio') */\n  ;\n\n  _proto.stopAudio = function stopAudio(audio) {\n    audio.pause();\n  }\n  /* starts playing at \"start\" position and stops after specified duration\n   \"start\" and \"duration\" in milliseconds\n   */\n  ;\n\n  _proto.playAudioPart = function playAudioPart(audio, start, duration) {\n    audio.currentTime = start / 1000; //in seconds\n\n    audio.play();\n    setTimeout(stopAudio, duration, audio); //in milliseconds\n  };\n\n  return Stimulusinterpreter;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///YqAC\n");

/***/ }),

/***/ "components/heads.css":
/*!**********************************!*\
  !*** ./src/components/heads.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"I1BE\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"nav {\\n  /* tomas update\\n  float:right!important;*/\\n  border-radius:8px!important;\\n}\\n\\nnav ul {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\nnav a:link,\\nnav a:visited {\\n  color: #f0f0f0;\\n  text-decoration: none;\\n}\\n\\nnav li li a:link,\\nnav li li a:visited {\\n  color: #303030;\\n  text-decoration: none;\\n  padding: 6px 8px;\\n}\\n\\nnav a {\\n  display: block;\\n\\n}\\n\\nnav li {\\n  font-family: 'Lato', sans-serif;\\n  font-weight: 400;\\n  float: left;\\n  background-color: #393b3e;\\n  color:#f0f0f0 !important;\\n  margin-right: 0px;\\n  position: relative;\\n  padding: 0.9em;\\n}\\n\\nnav li li{\\n  width: 160px;\\n  z-index:4;\\n  background-color:#f0f0f0;\\n  padding: 0;\\n}\\n\\nnav li:hover {\\n  background-color: #55afff;\\n}\\nnav li li:hover {\\n  background-color: #757575;\\n}\\n\\n\\nnav ul ul  {\\n  position: absolute;\\n  visibility: hidden;\\n}\\n\\nnav ul ul ul{\\n  position: absolute;\\n  right: 100%;\\n  top: -2px;\\n  border: solid 1px transparent;\\n}\\n\\nnav li:hover > ul {\\n  visibility: visible;\\n}\\n\\nbody {\\n  line-height: 1.5;\\n  font-size:15px;\\n  margin:0;\\n}\\n\\n.vf-black {\\n  color:#fff!important;\\n  background-color:#000!important;\\n}\\n.vf-modal{z-index:3;display:none;padding-top:100px;position:fixed;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgb(0,0,0);background-color:rgba(0,0,0,0.4)}\\n.vf-modal-content{margin:auto;background-color:#fff;position:relative;padding:0;outline:0;width:600px}.w3-closebtn{text-decoration:none;float:right;font-size:24px;font-weight:bold;color:inherit}\\n.vf-sand{color:#000!important;background-color:#fdf5e6!important}\\n.vf-card-2{}\\n.vf-white{color:#000!important;background-color:#fff!important}\\n.vf-right-border{\\n  border-top-right-radius: 16px;\\n  border-bottom-right-radius: 16px;\\n}\\n\\n.\\n\\n/* Animations */\\n@keyframes SlideInRight {\\n  0% {\\n    transform: translateX(100%);\\n  }\\n\\n  100% {\\n    transform: translateX(0);\\n  }\\n}\\n\\n@keyframes SlideOutRight {\\n  0% {\\n    transform: translateX(0);\\n  }\\n\\n  100% {\\n    transform: translateX(100%);\\n  }\\n}\\n\\n@keyframes SlideInLeft {\\n  0% {\\n    transform: translateX(-100%);\\n  }\\n\\n  100% {\\n    transform: translateX(0);\\n  }\\n}\\n\\n@keyframes SlideOutLeft {\\n  0% {\\n    transform: translateX(0);\\n  }\\n\\n  100% {\\n    transform: translateX(-100%);\\n  }\\n}\\n\\n@keyframes FadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes FadeOut {\\n  0% {\\n    opacity: 1;\\n  }\\n\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n\\n.animate-slide-in-right.au-enter {\\n  transform: translateX(100%);\\n}\\n\\n.animate-slide-in-right.au-enter-active {\\n  animation: SlideInRight 1s;\\n}\\n\\n.animate-slide-out-right.au-leave-active {\\n  animation: SlideOutRight 1s;\\n}\\n\\n.animate-slide-in-left.au-enter {\\n  transform: translateX(-100%);\\n}\\n\\n.animate-slide-in-left.au-enter-active {\\n  animation: SlideInLeft 1s;\\n}\\n\\n.animate-slide-out-left.au-leave-active {\\n  animation: SlideOutLeft 1s;\\n}\\n\\n.animate-fade-in.au-enter {\\n  opacity: 0;\\n}\\n\\n.animate-fade-in.au-enter-active {\\n  animation: FadeIn 1s;\\n}\\n\\n.animate-fade-out.au-leave-active {\\n  animation: FadeOut 1s;\\n}\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy9oZWFkcy5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9oZWFkcy5jc3M/MDI1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIm5hdiB7XFxuICAvKiB0b21hcyB1cGRhdGVcXG4gIGZsb2F0OnJpZ2h0IWltcG9ydGFudDsqL1xcbiAgYm9yZGVyLXJhZGl1czo4cHghaW1wb3J0YW50O1xcbn1cXG5cXG5uYXYgdWwge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbm5hdiBhOmxpbmssXFxubmF2IGE6dmlzaXRlZCB7XFxuICBjb2xvcjogI2YwZjBmMDtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxubmF2IGxpIGxpIGE6bGluayxcXG5uYXYgbGkgbGkgYTp2aXNpdGVkIHtcXG4gIGNvbG9yOiAjMzAzMDMwO1xcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgcGFkZGluZzogNnB4IDhweDtcXG59XFxuXFxubmF2IGEge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuXFxufVxcblxcbm5hdiBsaSB7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGZsb2F0OiBsZWZ0O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM5M2IzZTtcXG4gIGNvbG9yOiNmMGYwZjAgIWltcG9ydGFudDtcXG4gIG1hcmdpbi1yaWdodDogMHB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgcGFkZGluZzogMC45ZW07XFxufVxcblxcbm5hdiBsaSBsaXtcXG4gIHdpZHRoOiAxNjBweDtcXG4gIHotaW5kZXg6NDtcXG4gIGJhY2tncm91bmQtY29sb3I6I2YwZjBmMDtcXG4gIHBhZGRpbmc6IDA7XFxufVxcblxcbm5hdiBsaTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTVhZmZmO1xcbn1cXG5uYXYgbGkgbGk6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzc1NzU3NTtcXG59XFxuXFxuXFxubmF2IHVsIHVsICB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbm5hdiB1bCB1bCB1bHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxMDAlO1xcbiAgdG9wOiAtMnB4O1xcbiAgYm9yZGVyOiBzb2xpZCAxcHggdHJhbnNwYXJlbnQ7XFxufVxcblxcbm5hdiBsaTpob3ZlciA+IHVsIHtcXG4gIHZpc2liaWxpdHk6IHZpc2libGU7XFxufVxcblxcbmJvZHkge1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gIGZvbnQtc2l6ZToxNXB4O1xcbiAgbWFyZ2luOjA7XFxufVxcblxcbi52Zi1ibGFjayB7XFxuICBjb2xvcjojZmZmIWltcG9ydGFudDtcXG4gIGJhY2tncm91bmQtY29sb3I6IzAwMCFpbXBvcnRhbnQ7XFxufVxcbi52Zi1tb2RhbHt6LWluZGV4OjM7ZGlzcGxheTpub25lO3BhZGRpbmctdG9wOjEwMHB4O3Bvc2l0aW9uOmZpeGVkO2xlZnQ6MDt0b3A6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO292ZXJmbG93OmF1dG87YmFja2dyb3VuZC1jb2xvcjpyZ2IoMCwwLDApO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjQpfVxcbi52Zi1tb2RhbC1jb250ZW50e21hcmdpbjphdXRvO2JhY2tncm91bmQtY29sb3I6I2ZmZjtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOjA7b3V0bGluZTowO3dpZHRoOjYwMHB4fS53My1jbG9zZWJ0bnt0ZXh0LWRlY29yYXRpb246bm9uZTtmbG9hdDpyaWdodDtmb250LXNpemU6MjRweDtmb250LXdlaWdodDpib2xkO2NvbG9yOmluaGVyaXR9XFxuLnZmLXNhbmR7Y29sb3I6IzAwMCFpbXBvcnRhbnQ7YmFja2dyb3VuZC1jb2xvcjojZmRmNWU2IWltcG9ydGFudH1cXG4udmYtY2FyZC0ye31cXG4udmYtd2hpdGV7Y29sb3I6IzAwMCFpbXBvcnRhbnQ7YmFja2dyb3VuZC1jb2xvcjojZmZmIWltcG9ydGFudH1cXG4udmYtcmlnaHQtYm9yZGVye1xcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDE2cHg7XFxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTZweDtcXG59XFxuXFxuLlxcblxcbi8qIEFuaW1hdGlvbnMgKi9cXG5Aa2V5ZnJhbWVzIFNsaWRlSW5SaWdodCB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcXG4gIH1cXG5cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxuICB9XFxufVxcblxcbkBrZXlmcmFtZXMgU2xpZGVPdXRSaWdodCB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcXG4gIH1cXG5cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XFxuICB9XFxufVxcblxcbkBrZXlmcmFtZXMgU2xpZGVJbkxlZnQge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xcbiAgfVxcblxcbiAgMTAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcXG4gIH1cXG59XFxuXFxuQGtleWZyYW1lcyBTbGlkZU91dExlZnQge1xcbiAgMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxuICB9XFxuXFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcXG4gIH1cXG59XFxuXFxuQGtleWZyYW1lcyBGYWRlSW4ge1xcbiAgMCUge1xcbiAgICBvcGFjaXR5OiAwO1xcbiAgfVxcblxcbiAgMTAwJSB7XFxuICAgIG9wYWNpdHk6IDE7XFxuICB9XFxufVxcblxcbkBrZXlmcmFtZXMgRmFkZU91dCB7XFxuICAwJSB7XFxuICAgIG9wYWNpdHk6IDE7XFxuICB9XFxuXFxuICAxMDAlIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gIH1cXG59XFxuXFxuLmFuaW1hdGUtc2xpZGUtaW4tcmlnaHQuYXUtZW50ZXIge1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xcbn1cXG5cXG4uYW5pbWF0ZS1zbGlkZS1pbi1yaWdodC5hdS1lbnRlci1hY3RpdmUge1xcbiAgYW5pbWF0aW9uOiBTbGlkZUluUmlnaHQgMXM7XFxufVxcblxcbi5hbmltYXRlLXNsaWRlLW91dC1yaWdodC5hdS1sZWF2ZS1hY3RpdmUge1xcbiAgYW5pbWF0aW9uOiBTbGlkZU91dFJpZ2h0IDFzO1xcbn1cXG5cXG4uYW5pbWF0ZS1zbGlkZS1pbi1sZWZ0LmF1LWVudGVyIHtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XFxufVxcblxcbi5hbmltYXRlLXNsaWRlLWluLWxlZnQuYXUtZW50ZXItYWN0aXZlIHtcXG4gIGFuaW1hdGlvbjogU2xpZGVJbkxlZnQgMXM7XFxufVxcblxcbi5hbmltYXRlLXNsaWRlLW91dC1sZWZ0LmF1LWxlYXZlLWFjdGl2ZSB7XFxuICBhbmltYXRpb246IFNsaWRlT3V0TGVmdCAxcztcXG59XFxuXFxuLmFuaW1hdGUtZmFkZS1pbi5hdS1lbnRlciB7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uYW5pbWF0ZS1mYWRlLWluLmF1LWVudGVyLWFjdGl2ZSB7XFxuICBhbmltYXRpb246IEZhZGVJbiAxcztcXG59XFxuXFxuLmFuaW1hdGUtZmFkZS1vdXQuYXUtbGVhdmUtYWN0aXZlIHtcXG4gIGFuaW1hdGlvbjogRmFkZU91dCAxcztcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///components/heads.css\n");

/***/ }),

/***/ "components/nav-bar.html":
/*!*************************************!*\
  !*** ./src/components/nav-bar.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = \"<template bindable=\\\"router\\\">\\n  <require from=\\\"font-awesome/css/font-awesome.min.css\\\"></require>\\n\\n  <div class=\\\"w3-navbar w3-white w3-xlarge\\\">\\n    <table class=\\\"w3-left w3-padding-4 w3-margin-left w3-text-blue-grey\\\" style=\\\"line-height:0.2;font-family: Garamond,Serif\\\">\\n      <tr>\\n        <td rowspan=\\\"2\\\">\\n    <span class=\\\"w3-xlarge\\\" style=\\\"vertical-align:text-bottom\\\">\\n      <i>PSYCHO</i>\\n    </span>\\n        </td>\\n        <td>\\n    <span class=\\\"w3-small\\\">\\n      acoustic\\n    </span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n    <span class=\\\"w3-small\\\">\\n      visual\\n    </span>\\n        </td>\\n      </tr>\\n    </table>\\n    <a repeat.for=\\\"row of router.navigation\\\"\\n       class=\\\"${row.isActive ? 'w3-button w3-padding-4 w3-border-1 w3-white' : 'w3-button w3-padding-4'}\\\"\\n       href.bind=\\\"row.href\\\"\\n       t=\\\"[title]${row.title}\\\">\\n      <i class.bind=\\\"row.settings.icon\\\"></i>\\n      <i if.bind=\\\"row.settings.icon2\\\" class.bind=\\\"row.settings.icon2\\\"></i>\\n    </a>\\n  </div>\\n</template>\\n\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy9uYXYtYmFyLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXYtYmFyLmh0bWw/ZTg3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHRlbXBsYXRlIGJpbmRhYmxlPVxcXCJyb3V0ZXJcXFwiPlxcbiAgPHJlcXVpcmUgZnJvbT1cXFwiZm9udC1hd2Vzb21lL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzc1xcXCI+PC9yZXF1aXJlPlxcblxcbiAgPGRpdiBjbGFzcz1cXFwidzMtbmF2YmFyIHczLXdoaXRlIHczLXhsYXJnZVxcXCI+XFxuICAgIDx0YWJsZSBjbGFzcz1cXFwidzMtbGVmdCB3My1wYWRkaW5nLTQgdzMtbWFyZ2luLWxlZnQgdzMtdGV4dC1ibHVlLWdyZXlcXFwiIHN0eWxlPVxcXCJsaW5lLWhlaWdodDowLjI7Zm9udC1mYW1pbHk6IEdhcmFtb25kLFNlcmlmXFxcIj5cXG4gICAgICA8dHI+XFxuICAgICAgICA8dGQgcm93c3Bhbj1cXFwiMlxcXCI+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJ3My14bGFyZ2VcXFwiIHN0eWxlPVxcXCJ2ZXJ0aWNhbC1hbGlnbjp0ZXh0LWJvdHRvbVxcXCI+XFxuICAgICAgPGk+UFNZQ0hPPC9pPlxcbiAgICA8L3NwYW4+XFxuICAgICAgICA8L3RkPlxcbiAgICAgICAgPHRkPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwidzMtc21hbGxcXFwiPlxcbiAgICAgIGFjb3VzdGljXFxuICAgIDwvc3Bhbj5cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgPC90cj5cXG4gICAgICA8dHI+XFxuICAgICAgICA8dGQ+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJ3My1zbWFsbFxcXCI+XFxuICAgICAgdmlzdWFsXFxuICAgIDwvc3Bhbj5cXG4gICAgICAgIDwvdGQ+XFxuICAgICAgPC90cj5cXG4gICAgPC90YWJsZT5cXG4gICAgPGEgcmVwZWF0LmZvcj1cXFwicm93IG9mIHJvdXRlci5uYXZpZ2F0aW9uXFxcIlxcbiAgICAgICBjbGFzcz1cXFwiJHtyb3cuaXNBY3RpdmUgPyAndzMtYnV0dG9uIHczLXBhZGRpbmctNCB3My1ib3JkZXItMSB3My13aGl0ZScgOiAndzMtYnV0dG9uIHczLXBhZGRpbmctNCd9XFxcIlxcbiAgICAgICBocmVmLmJpbmQ9XFxcInJvdy5ocmVmXFxcIlxcbiAgICAgICB0PVxcXCJbdGl0bGVdJHtyb3cudGl0bGV9XFxcIj5cXG4gICAgICA8aSBjbGFzcy5iaW5kPVxcXCJyb3cuc2V0dGluZ3MuaWNvblxcXCI+PC9pPlxcbiAgICAgIDxpIGlmLmJpbmQ9XFxcInJvdy5zZXR0aW5ncy5pY29uMlxcXCIgY2xhc3MuYmluZD1cXFwicm93LnNldHRpbmdzLmljb24yXFxcIj48L2k+XFxuICAgIDwvYT5cXG4gIDwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuXFxuXCI7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///components/nav-bar.html\n");

/***/ }),

/***/ "components/navigation.html":
/*!****************************************!*\
  !*** ./src/components/navigation.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template bindable=\\\"router\\\">\\n  <div class=\\\"w3-bar-block w3-black\\\">\\n    <!--a class='w3-bar-item w3-button w3-white w3-padding-0 w3-border-bottom' href=\\\"/\\\"><irep></irep>Repository Home</a-->\\n    <div class=\\\"w3-bar-item w3-white w3-padding-0 w3-border-bottom\\\">navigation:</div>\\n    <a repeat.for=\\\"row of router.navigation\\\" class=\\\"${row.isActive ? 'w3-bar-item w3-button w3-blue' : 'w3-bar-item w3-button w3-white'}\\\" href.bind=\\\"row.href\\\">${row.title}</a>\\n  </div>\\n</template>\\n\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy9uYXZpZ2F0aW9uLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9uYXZpZ2F0aW9uLmh0bWw/YTE5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPHRlbXBsYXRlIGJpbmRhYmxlPVxcXCJyb3V0ZXJcXFwiPlxcbiAgPGRpdiBjbGFzcz1cXFwidzMtYmFyLWJsb2NrIHczLWJsYWNrXFxcIj5cXG4gICAgPCEtLWEgY2xhc3M9J3czLWJhci1pdGVtIHczLWJ1dHRvbiB3My13aGl0ZSB3My1wYWRkaW5nLTAgdzMtYm9yZGVyLWJvdHRvbScgaHJlZj1cXFwiL1xcXCI+PGlyZXA+PC9pcmVwPlJlcG9zaXRvcnkgSG9tZTwvYS0tPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJ3My1iYXItaXRlbSB3My13aGl0ZSB3My1wYWRkaW5nLTAgdzMtYm9yZGVyLWJvdHRvbVxcXCI+bmF2aWdhdGlvbjo8L2Rpdj5cXG4gICAgPGEgcmVwZWF0LmZvcj1cXFwicm93IG9mIHJvdXRlci5uYXZpZ2F0aW9uXFxcIiBjbGFzcz1cXFwiJHtyb3cuaXNBY3RpdmUgPyAndzMtYmFyLWl0ZW0gdzMtYnV0dG9uIHczLWJsdWUnIDogJ3czLWJhci1pdGVtIHczLWJ1dHRvbiB3My13aGl0ZSd9XFxcIiBocmVmLmJpbmQ9XFxcInJvdy5ocmVmXFxcIj4ke3Jvdy50aXRsZX08L2E+XFxuICA8L2Rpdj5cXG48L3RlbXBsYXRlPlxcblxcblwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///components/navigation.html\n");

/***/ }),

/***/ "components/sharedfooter.html":
/*!******************************************!*\
  !*** ./src/components/sharedfooter.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template>\\n<footer>\\n    <div class=\\\"w3-clear w3-margin-top\\\"></div>\\n    <!--div class=\\\"w3-center w3-black w3-bottom w3-bottombar\\\">\\n        Psychoacoustic test documentation at <a href=\\\"https://tomaskulhanek.gitbooks.io/psychoacoustic-test-system-documentation/content/\\\" target=\\\"_blank\\\">gitbooks.io</a>\\n    </div-->\\n</footer>\\n</template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy9zaGFyZWRmb290ZXIuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3NoYXJlZGZvb3Rlci5odG1sPzk1ZjYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjx0ZW1wbGF0ZT5cXG48Zm9vdGVyPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJ3My1jbGVhciB3My1tYXJnaW4tdG9wXFxcIj48L2Rpdj5cXG4gICAgPCEtLWRpdiBjbGFzcz1cXFwidzMtY2VudGVyIHczLWJsYWNrIHczLWJvdHRvbSB3My1ib3R0b21iYXJcXFwiPlxcbiAgICAgICAgUHN5Y2hvYWNvdXN0aWMgdGVzdCBkb2N1bWVudGF0aW9uIGF0IDxhIGhyZWY9XFxcImh0dHBzOi8vdG9tYXNrdWxoYW5lay5naXRib29rcy5pby9wc3ljaG9hY291c3RpYy10ZXN0LXN5c3RlbS1kb2N1bWVudGF0aW9uL2NvbnRlbnQvXFxcIiB0YXJnZXQ9XFxcIl9ibGFua1xcXCI+Z2l0Ym9va3MuaW88L2E+XFxuICAgIDwvZGl2LS0+XFxuPC9mb290ZXI+XFxuPC90ZW1wbGF0ZT5cXG5cIjsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///components/sharedfooter.html\n");

/***/ }),

/***/ "components/sharedheader.html":
/*!******************************************!*\
  !*** ./src/components/sharedheader.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<template>\\n</template>\\n\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50cy9zaGFyZWRoZWFkZXIuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3NoYXJlZGhlYWRlci5odG1sP2JiYzIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjx0ZW1wbGF0ZT5cXG48L3RlbXBsYXRlPlxcblwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///components/sharedheader.html\n");

/***/ })

}]);